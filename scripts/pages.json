[{"name":"AND()","description":"com.martingoe.cubelang.common.tokens.TokenType.AND","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-a-n-d/index.html","searchKeys":["AND","AND()","com.martingoe.cubelang.common.tokens.TokenType.AND"]},{"name":"ANY()","description":"com.martingoe.cubelang.common.NormalTypes.ANY","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-a-n-y/index.html","searchKeys":["ANY","ANY()","com.martingoe.cubelang.common.NormalTypes.ANY"]},{"name":"ANY_INT()","description":"com.martingoe.cubelang.common.NormalTypes.ANY_INT","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-a-n-y_-i-n-t/index.html","searchKeys":["ANY_INT","ANY_INT()","com.martingoe.cubelang.common.NormalTypes.ANY_INT"]},{"name":"BANG()","description":"com.martingoe.cubelang.common.tokens.TokenType.BANG","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-b-a-n-g/index.html","searchKeys":["BANG","BANG()","com.martingoe.cubelang.common.tokens.TokenType.BANG"]},{"name":"BRCKTL()","description":"com.martingoe.cubelang.common.tokens.TokenType.BRCKTL","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-b-r-c-k-t-l/index.html","searchKeys":["BRCKTL","BRCKTL()","com.martingoe.cubelang.common.tokens.TokenType.BRCKTL"]},{"name":"BRCKTR()","description":"com.martingoe.cubelang.common.tokens.TokenType.BRCKTR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-b-r-c-k-t-r/index.html","searchKeys":["BRCKTR","BRCKTR()","com.martingoe.cubelang.common.tokens.TokenType.BRCKTR"]},{"name":"CALL()","description":"com.martingoe.cubelang.common.ir.IRType.CALL","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-a-l-l/index.html","searchKeys":["CALL","CALL()","com.martingoe.cubelang.common.ir.IRType.CALL"]},{"name":"CHAR()","description":"com.martingoe.cubelang.common.NormalTypes.CHAR","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-c-h-a-r/index.html","searchKeys":["CHAR","CHAR()","com.martingoe.cubelang.common.NormalTypes.CHAR"]},{"name":"CHAR()","description":"com.martingoe.cubelang.common.tokens.TokenType.CHAR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-h-a-r/index.html","searchKeys":["CHAR","CHAR()","com.martingoe.cubelang.common.tokens.TokenType.CHAR"]},{"name":"CLOSEDL()","description":"com.martingoe.cubelang.common.tokens.TokenType.CLOSEDL","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-l-o-s-e-d-l/index.html","searchKeys":["CLOSEDL","CLOSEDL()","com.martingoe.cubelang.common.tokens.TokenType.CLOSEDL"]},{"name":"CLOSEDR()","description":"com.martingoe.cubelang.common.tokens.TokenType.CLOSEDR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-l-o-s-e-d-r/index.html","searchKeys":["CLOSEDR","CLOSEDR()","com.martingoe.cubelang.common.tokens.TokenType.CLOSEDR"]},{"name":"CMP()","description":"com.martingoe.cubelang.common.ir.IRType.CMP","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-m-p/index.html","searchKeys":["CMP","CMP()","com.martingoe.cubelang.common.ir.IRType.CMP"]},{"name":"COLON()","description":"com.martingoe.cubelang.common.tokens.TokenType.COLON","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-o-l-o-n/index.html","searchKeys":["COLON","COLON()","com.martingoe.cubelang.common.tokens.TokenType.COLON"]},{"name":"COMMA()","description":"com.martingoe.cubelang.common.tokens.TokenType.COMMA","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-o-m-m-a/index.html","searchKeys":["COMMA","COMMA()","com.martingoe.cubelang.common.tokens.TokenType.COMMA"]},{"name":"COMPARATOR()","description":"com.martingoe.cubelang.common.tokens.TokenType.COMPARATOR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-o-m-p-a-r-a-t-o-r/index.html","searchKeys":["COMPARATOR","COMPARATOR()","com.martingoe.cubelang.common.tokens.TokenType.COMPARATOR"]},{"name":"COPY()","description":"com.martingoe.cubelang.common.ir.IRType.COPY","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y/index.html","searchKeys":["COPY","COPY()","com.martingoe.cubelang.common.ir.IRType.COPY"]},{"name":"COPY_FROM_DEREF()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_FROM_DEREF","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-f-r-o-m_-d-e-r-e-f/index.html","searchKeys":["COPY_FROM_DEREF","COPY_FROM_DEREF()","com.martingoe.cubelang.common.ir.IRType.COPY_FROM_DEREF"]},{"name":"COPY_FROM_FP_OFFSET()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_FROM_FP_OFFSET","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-f-r-o-m_-f-p_-o-f-f-s-e-t/index.html","searchKeys":["COPY_FROM_FP_OFFSET","COPY_FROM_FP_OFFSET()","com.martingoe.cubelang.common.ir.IRType.COPY_FROM_FP_OFFSET"]},{"name":"COPY_FROM_REF()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_FROM_REF","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-f-r-o-m_-r-e-f/index.html","searchKeys":["COPY_FROM_REF","COPY_FROM_REF()","com.martingoe.cubelang.common.ir.IRType.COPY_FROM_REF"]},{"name":"COPY_FROM_REG_OFFSET()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_FROM_REG_OFFSET","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-f-r-o-m_-r-e-g_-o-f-f-s-e-t/index.html","searchKeys":["COPY_FROM_REG_OFFSET","COPY_FROM_REG_OFFSET()","com.martingoe.cubelang.common.ir.IRType.COPY_FROM_REG_OFFSET"]},{"name":"COPY_STRING_REF()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_STRING_REF","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-s-t-r-i-n-g_-r-e-f/index.html","searchKeys":["COPY_STRING_REF","COPY_STRING_REF()","com.martingoe.cubelang.common.ir.IRType.COPY_STRING_REF"]},{"name":"COPY_TO_DEREF()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_TO_DEREF","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-t-o_-d-e-r-e-f/index.html","searchKeys":["COPY_TO_DEREF","COPY_TO_DEREF()","com.martingoe.cubelang.common.ir.IRType.COPY_TO_DEREF"]},{"name":"COPY_TO_FP_OFFSET()","description":"com.martingoe.cubelang.common.ir.IRType.COPY_TO_FP_OFFSET","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-c-o-p-y_-t-o_-f-p_-o-f-f-s-e-t/index.html","searchKeys":["COPY_TO_FP_OFFSET","COPY_TO_FP_OFFSET()","com.martingoe.cubelang.common.ir.IRType.COPY_TO_FP_OFFSET"]},{"name":"CURLYL()","description":"com.martingoe.cubelang.common.tokens.TokenType.CURLYL","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-u-r-l-y-l/index.html","searchKeys":["CURLYL","CURLYL()","com.martingoe.cubelang.common.tokens.TokenType.CURLYL"]},{"name":"CURLYR()","description":"com.martingoe.cubelang.common.tokens.TokenType.CURLYR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-c-u-r-l-y-r/index.html","searchKeys":["CURLYR","CURLYR()","com.martingoe.cubelang.common.tokens.TokenType.CURLYR"]},{"name":"DEC()","description":"com.martingoe.cubelang.common.ir.IRType.DEC","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-d-e-c/index.html","searchKeys":["DEC","DEC()","com.martingoe.cubelang.common.ir.IRType.DEC"]},{"name":"DIV_OP()","description":"com.martingoe.cubelang.common.ir.IRType.DIV_OP","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-d-i-v_-o-p/index.html","searchKeys":["DIV_OP","DIV_OP()","com.martingoe.cubelang.common.ir.IRType.DIV_OP"]},{"name":"DOT()","description":"com.martingoe.cubelang.common.tokens.TokenType.DOT","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-d-o-t/index.html","searchKeys":["DOT","DOT()","com.martingoe.cubelang.common.tokens.TokenType.DOT"]},{"name":"ELSE()","description":"com.martingoe.cubelang.common.tokens.TokenType.ELSE","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-e-l-s-e/index.html","searchKeys":["ELSE","ELSE()","com.martingoe.cubelang.common.tokens.TokenType.ELSE"]},{"name":"EOF()","description":"com.martingoe.cubelang.common.tokens.TokenType.EOF","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-e-o-f/index.html","searchKeys":["EOF","EOF()","com.martingoe.cubelang.common.tokens.TokenType.EOF"]},{"name":"EQUALITY()","description":"com.martingoe.cubelang.common.tokens.TokenType.EQUALITY","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-e-q-u-a-l-i-t-y/index.html","searchKeys":["EQUALITY","EQUALITY()","com.martingoe.cubelang.common.tokens.TokenType.EQUALITY"]},{"name":"EQUALS()","description":"com.martingoe.cubelang.common.tokens.TokenType.EQUALS","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-e-q-u-a-l-s/index.html","searchKeys":["EQUALS","EQUALS()","com.martingoe.cubelang.common.tokens.TokenType.EQUALS"]},{"name":"EXTEND_TO_64BITS()","description":"com.martingoe.cubelang.common.ir.IRType.EXTEND_TO_64BITS","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-e-x-t-e-n-d_-t-o_64-b-i-t-s/index.html","searchKeys":["EXTEND_TO_64BITS","EXTEND_TO_64BITS()","com.martingoe.cubelang.common.ir.IRType.EXTEND_TO_64BITS"]},{"name":"EXTERN()","description":"com.martingoe.cubelang.common.tokens.TokenType.EXTERN","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-e-x-t-e-r-n/index.html","searchKeys":["EXTERN","EXTERN()","com.martingoe.cubelang.common.tokens.TokenType.EXTERN"]},{"name":"FOR()","description":"com.martingoe.cubelang.common.tokens.TokenType.FOR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-f-o-r/index.html","searchKeys":["FOR","FOR()","com.martingoe.cubelang.common.tokens.TokenType.FOR"]},{"name":"FUN()","description":"com.martingoe.cubelang.common.tokens.TokenType.FUN","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-f-u-n/index.html","searchKeys":["FUN","FUN()","com.martingoe.cubelang.common.tokens.TokenType.FUN"]},{"name":"I16()","description":"com.martingoe.cubelang.common.NormalTypes.I16","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-i16/index.html","searchKeys":["I16","I16()","com.martingoe.cubelang.common.NormalTypes.I16"]},{"name":"I32()","description":"com.martingoe.cubelang.common.NormalTypes.I32","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-i32/index.html","searchKeys":["I32","I32()","com.martingoe.cubelang.common.NormalTypes.I32"]},{"name":"I64()","description":"com.martingoe.cubelang.common.NormalTypes.I64","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-i64/index.html","searchKeys":["I64","I64()","com.martingoe.cubelang.common.NormalTypes.I64"]},{"name":"I8()","description":"com.martingoe.cubelang.common.NormalTypes.I8","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/-i8/index.html","searchKeys":["I8","I8()","com.martingoe.cubelang.common.NormalTypes.I8"]},{"name":"IDENTIFIER()","description":"com.martingoe.cubelang.common.tokens.TokenType.IDENTIFIER","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-i-d-e-n-t-i-f-i-e-r/index.html","searchKeys":["IDENTIFIER","IDENTIFIER()","com.martingoe.cubelang.common.tokens.TokenType.IDENTIFIER"]},{"name":"IF()","description":"com.martingoe.cubelang.common.tokens.TokenType.IF","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-i-f/index.html","searchKeys":["IF","IF()","com.martingoe.cubelang.common.tokens.TokenType.IF"]},{"name":"IMPORT()","description":"com.martingoe.cubelang.common.tokens.TokenType.IMPORT","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-i-m-p-o-r-t/index.html","searchKeys":["IMPORT","IMPORT()","com.martingoe.cubelang.common.tokens.TokenType.IMPORT"]},{"name":"INC()","description":"com.martingoe.cubelang.common.ir.IRType.INC","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-i-n-c/index.html","searchKeys":["INC","INC()","com.martingoe.cubelang.common.ir.IRType.INC"]},{"name":"MINUS_OP()","description":"com.martingoe.cubelang.common.ir.IRType.MINUS_OP","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-m-i-n-u-s_-o-p/index.html","searchKeys":["MINUS_OP","MINUS_OP()","com.martingoe.cubelang.common.ir.IRType.MINUS_OP"]},{"name":"MUL_OP()","description":"com.martingoe.cubelang.common.ir.IRType.MUL_OP","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-m-u-l_-o-p/index.html","searchKeys":["MUL_OP","MUL_OP()","com.martingoe.cubelang.common.ir.IRType.MUL_OP"]},{"name":"NEG_UNARY()","description":"com.martingoe.cubelang.common.ir.IRType.NEG_UNARY","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-n-e-g_-u-n-a-r-y/index.html","searchKeys":["NEG_UNARY","NEG_UNARY()","com.martingoe.cubelang.common.ir.IRType.NEG_UNARY"]},{"name":"NULLVALUE()","description":"com.martingoe.cubelang.common.tokens.TokenType.NULLVALUE","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-n-u-l-l-v-a-l-u-e/index.html","searchKeys":["NULLVALUE","NULLVALUE()","com.martingoe.cubelang.common.tokens.TokenType.NULLVALUE"]},{"name":"NUMBER()","description":"com.martingoe.cubelang.common.tokens.TokenType.NUMBER","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-n-u-m-b-e-r/index.html","searchKeys":["NUMBER","NUMBER()","com.martingoe.cubelang.common.tokens.TokenType.NUMBER"]},{"name":"OR()","description":"com.martingoe.cubelang.common.tokens.TokenType.OR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-o-r/index.html","searchKeys":["OR","OR()","com.martingoe.cubelang.common.tokens.TokenType.OR"]},{"name":"PLUSMINUS()","description":"com.martingoe.cubelang.common.tokens.TokenType.PLUSMINUS","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-p-l-u-s-m-i-n-u-s/index.html","searchKeys":["PLUSMINUS","PLUSMINUS()","com.martingoe.cubelang.common.tokens.TokenType.PLUSMINUS"]},{"name":"PLUS_OP()","description":"com.martingoe.cubelang.common.ir.IRType.PLUS_OP","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-p-l-u-s_-o-p/index.html","searchKeys":["PLUS_OP","PLUS_OP()","com.martingoe.cubelang.common.ir.IRType.PLUS_OP"]},{"name":"POINTER()","description":"com.martingoe.cubelang.common.tokens.TokenType.POINTER","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-p-o-i-n-t-e-r/index.html","searchKeys":["POINTER","POINTER()","com.martingoe.cubelang.common.tokens.TokenType.POINTER"]},{"name":"POP_ARG()","description":"com.martingoe.cubelang.common.ir.IRType.POP_ARG","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-p-o-p_-a-r-g/index.html","searchKeys":["POP_ARG","POP_ARG()","com.martingoe.cubelang.common.ir.IRType.POP_ARG"]},{"name":"POP_REG()","description":"com.martingoe.cubelang.common.ir.IRType.POP_REG","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-p-o-p_-r-e-g/index.html","searchKeys":["POP_REG","POP_REG()","com.martingoe.cubelang.common.ir.IRType.POP_REG"]},{"name":"PUSH_ARG()","description":"com.martingoe.cubelang.common.ir.IRType.PUSH_ARG","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-p-u-s-h_-a-r-g/index.html","searchKeys":["PUSH_ARG","PUSH_ARG()","com.martingoe.cubelang.common.ir.IRType.PUSH_ARG"]},{"name":"PUSH_REG()","description":"com.martingoe.cubelang.common.ir.IRType.PUSH_REG","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-p-u-s-h_-r-e-g/index.html","searchKeys":["PUSH_REG","PUSH_REG()","com.martingoe.cubelang.common.ir.IRType.PUSH_REG"]},{"name":"RETURN()","description":"com.martingoe.cubelang.common.tokens.TokenType.RETURN","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-r-e-t-u-r-n/index.html","searchKeys":["RETURN","RETURN()","com.martingoe.cubelang.common.tokens.TokenType.RETURN"]},{"name":"SAL()","description":"com.martingoe.cubelang.common.ir.IRType.SAL","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/-s-a-l/index.html","searchKeys":["SAL","SAL()","com.martingoe.cubelang.common.ir.IRType.SAL"]},{"name":"SEMICOLON()","description":"com.martingoe.cubelang.common.tokens.TokenType.SEMICOLON","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-s-e-m-i-c-o-l-o-n/index.html","searchKeys":["SEMICOLON","SEMICOLON()","com.martingoe.cubelang.common.tokens.TokenType.SEMICOLON"]},{"name":"SLASH()","description":"com.martingoe.cubelang.common.tokens.TokenType.SLASH","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-s-l-a-s-h/index.html","searchKeys":["SLASH","SLASH()","com.martingoe.cubelang.common.tokens.TokenType.SLASH"]},{"name":"STAR()","description":"com.martingoe.cubelang.common.tokens.TokenType.STAR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-s-t-a-r/index.html","searchKeys":["STAR","STAR()","com.martingoe.cubelang.common.tokens.TokenType.STAR"]},{"name":"STRING()","description":"com.martingoe.cubelang.common.tokens.TokenType.STRING","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING()","com.martingoe.cubelang.common.tokens.TokenType.STRING"]},{"name":"STRUCT()","description":"com.martingoe.cubelang.common.tokens.TokenType.STRUCT","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-s-t-r-u-c-t/index.html","searchKeys":["STRUCT","STRUCT()","com.martingoe.cubelang.common.tokens.TokenType.STRUCT"]},{"name":"VAR()","description":"com.martingoe.cubelang.common.tokens.TokenType.VAR","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-v-a-r/index.html","searchKeys":["VAR","VAR()","com.martingoe.cubelang.common.tokens.TokenType.VAR"]},{"name":"WHILE()","description":"com.martingoe.cubelang.common.tokens.TokenType.WHILE","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/-w-h-i-l-e/index.html","searchKeys":["WHILE","WHILE()","com.martingoe.cubelang.common.tokens.TokenType.WHILE"]},{"name":"abstract class Expression(state: Int, matchedResults: MutableMap<Char, Int>, cost: MutableMap<Char, Int>, ruleMatchingBytes: IntArray, resultType: Type)","description":"com.martingoe.cubelang.common.Expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/index.html","searchKeys":["Expression","abstract class Expression(state: Int, matchedResults: MutableMap<Char, Int>, cost: MutableMap<Char, Int>, ruleMatchingBytes: IntArray, resultType: Type)","com.martingoe.cubelang.common.Expression"]},{"name":"abstract class Rule","description":"com.martingoe.cubelang.backend.instructionselection.Rule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/index.html","searchKeys":["Rule","abstract class Rule","com.martingoe.cubelang.backend.instructionselection.Rule"]},{"name":"abstract class Statement","description":"com.martingoe.cubelang.common.Statement","location":"-cubelang/com.martingoe.cubelang.common/-statement/index.html","searchKeys":["Statement","abstract class Statement","com.martingoe.cubelang.common.Statement"]},{"name":"abstract fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/accept.html","searchKeys":["accept","abstract fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.accept"]},{"name":"abstract fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/accept.html","searchKeys":["accept","abstract fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.accept"]},{"name":"abstract fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.acceptExtendTo64Bits","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/accept-extend-to64-bits.html","searchKeys":["acceptExtendTo64Bits","abstract fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.acceptExtendTo64Bits"]},{"name":"abstract fun acceptFramePointer(framePointer: Expression.FramePointer): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.acceptFramePointer","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/accept-frame-pointer.html","searchKeys":["acceptFramePointer","abstract fun acceptFramePointer(framePointer: Expression.FramePointer): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.acceptFramePointer"]},{"name":"abstract fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.Rule.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/construct-string.html","searchKeys":["constructString","abstract fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.Rule.constructString"]},{"name":"abstract fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.Rule.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/get-cost.html","searchKeys":["getCost","abstract fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.Rule.getCost"]},{"name":"abstract fun getLength(): Int","description":"com.martingoe.cubelang.common.Type.getLength","location":"-cubelang/com.martingoe.cubelang.common/-type/get-length.html","searchKeys":["getLength","abstract fun getLength(): Int","com.martingoe.cubelang.common.Type.getLength"]},{"name":"abstract fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitArgumentDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-argument-definition.html","searchKeys":["visitArgumentDefinition","abstract fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitArgumentDefinition"]},{"name":"abstract fun visitArrayGet(arrayGet: Expression.ArrayGet): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitArrayGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-array-get.html","searchKeys":["visitArrayGet","abstract fun visitArrayGet(arrayGet: Expression.ArrayGet): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitArrayGet"]},{"name":"abstract fun visitAssignment(assignment: Expression.Assignment): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitAssignment","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-assignment.html","searchKeys":["visitAssignment","abstract fun visitAssignment(assignment: Expression.Assignment): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitAssignment"]},{"name":"abstract fun visitBlockStatement(blockStatement: Statement.BlockStatement): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitBlockStatement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-block-statement.html","searchKeys":["visitBlockStatement","abstract fun visitBlockStatement(blockStatement: Statement.BlockStatement): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitBlockStatement"]},{"name":"abstract fun visitCall(call: Expression.Call): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitCall","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-call.html","searchKeys":["visitCall","abstract fun visitCall(call: Expression.Call): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitCall"]},{"name":"abstract fun visitComparison(comparison: Expression.Comparison): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitComparison","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-comparison.html","searchKeys":["visitComparison","abstract fun visitComparison(comparison: Expression.Comparison): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitComparison"]},{"name":"abstract fun visitEmpty(empty: Statement.Empty): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitEmpty","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-empty.html","searchKeys":["visitEmpty","abstract fun visitEmpty(empty: Statement.Empty): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitEmpty"]},{"name":"abstract fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitExpressionStatement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-expression-statement.html","searchKeys":["visitExpressionStatement","abstract fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitExpressionStatement"]},{"name":"abstract fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitExternFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-extern-function-definition.html","searchKeys":["visitExternFunctionDefinition","abstract fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitExternFunctionDefinition"]},{"name":"abstract fun visitForStmnt(forStmnt: Statement.ForStmnt): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitForStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-for-stmnt.html","searchKeys":["visitForStmnt","abstract fun visitForStmnt(forStmnt: Statement.ForStmnt): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitForStmnt"]},{"name":"abstract fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-function-definition.html","searchKeys":["visitFunctionDefinition","abstract fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitFunctionDefinition"]},{"name":"abstract fun visitGrouping(grouping: Expression.Grouping): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitGrouping","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-grouping.html","searchKeys":["visitGrouping","abstract fun visitGrouping(grouping: Expression.Grouping): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitGrouping"]},{"name":"abstract fun visitIfStmnt(ifStmnt: Statement.IfStmnt): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitIfStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-if-stmnt.html","searchKeys":["visitIfStmnt","abstract fun visitIfStmnt(ifStmnt: Statement.IfStmnt): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitIfStmnt"]},{"name":"abstract fun visitImportStmnt(importStmnt: Statement.ImportStmnt): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitImportStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-import-stmnt.html","searchKeys":["visitImportStmnt","abstract fun visitImportStmnt(importStmnt: Statement.ImportStmnt): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitImportStmnt"]},{"name":"abstract fun visitInstanceGet(instanceGet: Expression.InstanceGet): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitInstanceGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-instance-get.html","searchKeys":["visitInstanceGet","abstract fun visitInstanceGet(instanceGet: Expression.InstanceGet): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitInstanceGet"]},{"name":"abstract fun visitLiteral(literal: Expression.Literal): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitLiteral","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-literal.html","searchKeys":["visitLiteral","abstract fun visitLiteral(literal: Expression.Literal): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitLiteral"]},{"name":"abstract fun visitLogical(logical: Expression.Logical): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitLogical","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-logical.html","searchKeys":["visitLogical","abstract fun visitLogical(logical: Expression.Logical): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitLogical"]},{"name":"abstract fun visitOperation(operation: Expression.Operation): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitOperation","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-operation.html","searchKeys":["visitOperation","abstract fun visitOperation(operation: Expression.Operation): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitOperation"]},{"name":"abstract fun visitPointerGet(pointerGet: Expression.PointerGet): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitPointerGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-pointer-get.html","searchKeys":["visitPointerGet","abstract fun visitPointerGet(pointerGet: Expression.PointerGet): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitPointerGet"]},{"name":"abstract fun visitRegister(register: Expression.Register): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitRegister","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-register.html","searchKeys":["visitRegister","abstract fun visitRegister(register: Expression.Register): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitRegister"]},{"name":"abstract fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitReturnStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-return-stmnt.html","searchKeys":["visitReturnStmnt","abstract fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitReturnStmnt"]},{"name":"abstract fun visitStringLiteral(stringLiteral: Expression.StringLiteral): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitStringLiteral","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-string-literal.html","searchKeys":["visitStringLiteral","abstract fun visitStringLiteral(stringLiteral: Expression.StringLiteral): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitStringLiteral"]},{"name":"abstract fun visitStructDefinition(structDefinition: Statement.StructDefinition): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitStructDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-struct-definition.html","searchKeys":["visitStructDefinition","abstract fun visitStructDefinition(structDefinition: Statement.StructDefinition): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitStructDefinition"]},{"name":"abstract fun visitUnary(unary: Expression.Unary): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitUnary","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-unary.html","searchKeys":["visitUnary","abstract fun visitUnary(unary: Expression.Unary): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitUnary"]},{"name":"abstract fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitValueFromPointer","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-value-from-pointer.html","searchKeys":["visitValueFromPointer","abstract fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitValueFromPointer"]},{"name":"abstract fun visitVarCall(varCall: Expression.VarCall): T","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitVarCall","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/visit-var-call.html","searchKeys":["visitVarCall","abstract fun visitVarCall(varCall: Expression.VarCall): T","com.martingoe.cubelang.common.Expression.ExpressionVisitor.visitVarCall"]},{"name":"abstract fun visitVarInitialization(varInitialization: Statement.VarInitialization): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitVarInitialization","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-var-initialization.html","searchKeys":["visitVarInitialization","abstract fun visitVarInitialization(varInitialization: Statement.VarInitialization): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitVarInitialization"]},{"name":"abstract fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt): R","description":"com.martingoe.cubelang.common.Statement.StatementVisitor.visitWhileStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/visit-while-stmnt.html","searchKeys":["visitWhileStmnt","abstract fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt): R","com.martingoe.cubelang.common.Statement.StatementVisitor.visitWhileStmnt"]},{"name":"abstract val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.Rule.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/expression.html","searchKeys":["expression","abstract val expression: Expression","com.martingoe.cubelang.backend.instructionselection.Rule.expression"]},{"name":"abstract val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.Rule.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/result-symbol.html","searchKeys":["resultSymbol","abstract val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.Rule.resultSymbol"]},{"name":"class ASMEmitter","description":"com.martingoe.cubelang.common.ASMEmitter","location":"-cubelang/com.martingoe.cubelang.common/-a-s-m-emitter/index.html","searchKeys":["ASMEmitter","class ASMEmitter","com.martingoe.cubelang.common.ASMEmitter"]},{"name":"class ASTGetSymbol : Expression.ExpressionVisitor<Char> ","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/index.html","searchKeys":["ASTGetSymbol","class ASTGetSymbol : Expression.ExpressionVisitor<Char> ","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol"]},{"name":"class ASTToIRService(asmEmitter: ASMEmitter)","description":"com.martingoe.cubelang.backend.instructionselection.ASTToIRService","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-to-i-r-service/index.html","searchKeys":["ASTToIRService","class ASTToIRService(asmEmitter: ASMEmitter)","com.martingoe.cubelang.backend.instructionselection.ASTToIRService"]},{"name":"class ArgumentDefinition(name: Token, type: Type) : Statement","description":"com.martingoe.cubelang.common.Statement.ArgumentDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-argument-definition/index.html","searchKeys":["ArgumentDefinition","class ArgumentDefinition(name: Token, type: Type) : Statement","com.martingoe.cubelang.common.Statement.ArgumentDefinition"]},{"name":"class ArrayGet(expression: Expression, inBrackets: Expression, bracket: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.ArrayGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-array-get/index.html","searchKeys":["ArrayGet","class ArrayGet(expression: Expression, inBrackets: Expression, bracket: Token) : Expression","com.martingoe.cubelang.common.Expression.ArrayGet"]},{"name":"class ArrayType(subType: Type, count: Int) : Type","description":"com.martingoe.cubelang.common.ArrayType","location":"-cubelang/com.martingoe.cubelang.common/-array-type/index.html","searchKeys":["ArrayType","class ArrayType(subType: Type, count: Int) : Type","com.martingoe.cubelang.common.ArrayType"]},{"name":"class Assignment(leftSide: Expression, valueExpression: Expression, equals: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.Assignment","location":"-cubelang/com.martingoe.cubelang.common/-expression/-assignment/index.html","searchKeys":["Assignment","class Assignment(leftSide: Expression, valueExpression: Expression, equals: Token) : Expression","com.martingoe.cubelang.common.Expression.Assignment"]},{"name":"class BlockStatement(statements: List<Statement>) : Statement","description":"com.martingoe.cubelang.common.Statement.BlockStatement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-block-statement/index.html","searchKeys":["BlockStatement","class BlockStatement(statements: List<Statement>) : Statement","com.martingoe.cubelang.common.Statement.BlockStatement"]},{"name":"class Call(callee: Expression.VarCall, arguments: List<Expression>, bracket: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.Call","location":"-cubelang/com.martingoe.cubelang.common/-expression/-call/index.html","searchKeys":["Call","class Call(callee: Expression.VarCall, arguments: List<Expression>, bracket: Token) : Expression","com.martingoe.cubelang.common.Expression.Call"]},{"name":"class CallRule : Rule","description":"com.martingoe.cubelang.backend.instructionselection.CallRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-call-rule/index.html","searchKeys":["CallRule","class CallRule : Rule","com.martingoe.cubelang.backend.instructionselection.CallRule"]},{"name":"class Comparison(leftExpression: Expression, comparator: Token, rightExpression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.Comparison","location":"-cubelang/com.martingoe.cubelang.common/-expression/-comparison/index.html","searchKeys":["Comparison","class Comparison(leftExpression: Expression, comparator: Token, rightExpression: Expression) : Expression","com.martingoe.cubelang.common.Expression.Comparison"]},{"name":"class ComparisonRegReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-comparison-reg-reg/index.html","searchKeys":["ComparisonRegReg","class ComparisonRegReg : Rule","com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg"]},{"name":"class ConsoleColor","description":"com.martingoe.cubelang.common.ConsoleColor","location":"-cubelang/com.martingoe.cubelang.common/-console-color/index.html","searchKeys":["ConsoleColor","class ConsoleColor","com.martingoe.cubelang.common.ConsoleColor"]},{"name":"class DivOperationRegReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-div-operation-reg-reg/index.html","searchKeys":["DivOperationRegReg","class DivOperationRegReg : Rule","com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg"]},{"name":"class Empty : Statement","description":"com.martingoe.cubelang.common.Statement.Empty","location":"-cubelang/com.martingoe.cubelang.common/-statement/-empty/index.html","searchKeys":["Empty","class Empty : Statement","com.martingoe.cubelang.common.Statement.Empty"]},{"name":"class ErrorManager(lines: List<String>, exitAfterError: Boolean)","description":"com.martingoe.cubelang.common.errors.ErrorManager","location":"-cubelang/com.martingoe.cubelang.common.errors/-error-manager/index.html","searchKeys":["ErrorManager","class ErrorManager(lines: List<String>, exitAfterError: Boolean)","com.martingoe.cubelang.common.errors.ErrorManager"]},{"name":"class ExpressionMatchingTrie(rules: Array<Rule>, astGetSymbol: ASTGetSymbol)","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/index.html","searchKeys":["ExpressionMatchingTrie","class ExpressionMatchingTrie(rules: Array<Rule>, astGetSymbol: ASTGetSymbol)","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie"]},{"name":"class ExpressionStatement(expression: Expression) : Statement","description":"com.martingoe.cubelang.common.Statement.ExpressionStatement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-expression-statement/index.html","searchKeys":["ExpressionStatement","class ExpressionStatement(expression: Expression) : Statement","com.martingoe.cubelang.common.Statement.ExpressionStatement"]},{"name":"class ExtendTo64Bit(expression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.ExtendTo64Bit","location":"-cubelang/com.martingoe.cubelang.common/-expression/-extend-to64-bit/index.html","searchKeys":["ExtendTo64Bit","class ExtendTo64Bit(expression: Expression) : Expression","com.martingoe.cubelang.common.Expression.ExtendTo64Bit"]},{"name":"class ExtendTo64BitsRule : Rule","description":"com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-extend-to64-bits-rule/index.html","searchKeys":["ExtendTo64BitsRule","class ExtendTo64BitsRule : Rule","com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule"]},{"name":"class ExternFunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type) : Statement","description":"com.martingoe.cubelang.common.Statement.ExternFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-extern-function-definition/index.html","searchKeys":["ExternFunctionDefinition","class ExternFunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type) : Statement","com.martingoe.cubelang.common.Statement.ExternFunctionDefinition"]},{"name":"class FileSymbolTable","description":"com.martingoe.cubelang.common.FileSymbolTable","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/index.html","searchKeys":["FileSymbolTable","class FileSymbolTable","com.martingoe.cubelang.common.FileSymbolTable"]},{"name":"class ForStmnt(inBrackets: List<Statement>, body: Statement) : Statement","description":"com.martingoe.cubelang.common.Statement.ForStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-for-stmnt/index.html","searchKeys":["ForStmnt","class ForStmnt(inBrackets: List<Statement>, body: Statement) : Statement","com.martingoe.cubelang.common.Statement.ForStmnt"]},{"name":"class FramePointer : Expression","description":"com.martingoe.cubelang.common.Expression.FramePointer","location":"-cubelang/com.martingoe.cubelang.common/-expression/-frame-pointer/index.html","searchKeys":["FramePointer","class FramePointer : Expression","com.martingoe.cubelang.common.Expression.FramePointer"]},{"name":"class FramePointer : ValueType","description":"com.martingoe.cubelang.common.ir.FramePointer","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer/index.html","searchKeys":["FramePointer","class FramePointer : ValueType","com.martingoe.cubelang.common.ir.FramePointer"]},{"name":"class FramePointerOffset(literal: String, temporaryRegister: TemporaryRegister?, offset: String?) : ValueType","description":"com.martingoe.cubelang.common.ir.FramePointerOffset","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/index.html","searchKeys":["FramePointerOffset","class FramePointerOffset(literal: String, temporaryRegister: TemporaryRegister?, offset: String?) : ValueType","com.martingoe.cubelang.common.ir.FramePointerOffset"]},{"name":"class FramePointerRule : Rule","description":"com.martingoe.cubelang.backend.instructionselection.FramePointerRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-frame-pointer-rule/index.html","searchKeys":["FramePointerRule","class FramePointerRule : Rule","com.martingoe.cubelang.backend.instructionselection.FramePointerRule"]},{"name":"class FunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type, body: Statement) : Statement","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/index.html","searchKeys":["FunctionDefinition","class FunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type, body: Statement) : Statement","com.martingoe.cubelang.common.Statement.FunctionDefinition"]},{"name":"class FunctionLabel(name: String) : ValueType","description":"com.martingoe.cubelang.common.ir.FunctionLabel","location":"-cubelang/com.martingoe.cubelang.common.ir/-function-label/index.html","searchKeys":["FunctionLabel","class FunctionLabel(name: String) : ValueType","com.martingoe.cubelang.common.ir.FunctionLabel"]},{"name":"class Grouping(expression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.Grouping","location":"-cubelang/com.martingoe.cubelang.common/-expression/-grouping/index.html","searchKeys":["Grouping","class Grouping(expression: Expression) : Expression","com.martingoe.cubelang.common.Expression.Grouping"]},{"name":"class IRLiteral(value: String) : ValueType","description":"com.martingoe.cubelang.common.ir.IRLiteral","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-literal/index.html","searchKeys":["IRLiteral","class IRLiteral(value: String) : ValueType","com.martingoe.cubelang.common.ir.IRLiteral"]},{"name":"class IRToASM","description":"com.martingoe.cubelang.backend.IRToASM","location":"-cubelang/com.martingoe.cubelang.backend/-i-r-to-a-s-m/index.html","searchKeys":["IRToASM","class IRToASM","com.martingoe.cubelang.backend.IRToASM"]},{"name":"class IRValue(type: IRType, arg0: ValueType?, arg1: ValueType?, resultType: Type)","description":"com.martingoe.cubelang.common.ir.IRValue","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/index.html","searchKeys":["IRValue","class IRValue(type: IRType, arg0: ValueType?, arg1: ValueType?, resultType: Type)","com.martingoe.cubelang.common.ir.IRValue"]},{"name":"class IfStmnt(condition: Expression, ifBody: Statement, elseBody: Statement?) : Statement","description":"com.martingoe.cubelang.common.Statement.IfStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-if-stmnt/index.html","searchKeys":["IfStmnt","class IfStmnt(condition: Expression, ifBody: Statement, elseBody: Statement?) : Statement","com.martingoe.cubelang.common.Statement.IfStmnt"]},{"name":"class ImportStmnt(identifier: Token) : Statement","description":"com.martingoe.cubelang.common.Statement.ImportStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-import-stmnt/index.html","searchKeys":["ImportStmnt","class ImportStmnt(identifier: Token) : Statement","com.martingoe.cubelang.common.Statement.ImportStmnt"]},{"name":"class InstanceGet(expression: Expression, identifier: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.InstanceGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-instance-get/index.html","searchKeys":["InstanceGet","class InstanceGet(expression: Expression, identifier: Token) : Expression","com.martingoe.cubelang.common.Expression.InstanceGet"]},{"name":"class Lexer(fileContent: String)","description":"com.martingoe.cubelang.frontend.lexing.Lexer","location":"-cubelang/com.martingoe.cubelang.frontend.lexing/-lexer/index.html","searchKeys":["Lexer","class Lexer(fileContent: String)","com.martingoe.cubelang.frontend.lexing.Lexer"]},{"name":"class Literal(value: Any?, token: Token?) : Expression","description":"com.martingoe.cubelang.common.Expression.Literal","location":"-cubelang/com.martingoe.cubelang.common/-expression/-literal/index.html","searchKeys":["Literal","class Literal(value: Any?, token: Token?) : Expression","com.martingoe.cubelang.common.Expression.Literal"]},{"name":"class LiteralToReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.LiteralToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-literal-to-reg/index.html","searchKeys":["LiteralToReg","class LiteralToReg : Rule","com.martingoe.cubelang.backend.instructionselection.LiteralToReg"]},{"name":"class Logical(leftExpression: Expression, logical: Token, rightExpression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.Logical","location":"-cubelang/com.martingoe.cubelang.common/-expression/-logical/index.html","searchKeys":["Logical","class Logical(leftExpression: Expression, logical: Token, rightExpression: Expression) : Expression","com.martingoe.cubelang.common.Expression.Logical"]},{"name":"class Main(libraryPath: String)","description":"com.martingoe.cubelang.main.Main","location":"-cubelang/com.martingoe.cubelang.main/-main/index.html","searchKeys":["Main","class Main(libraryPath: String)","com.martingoe.cubelang.main.Main"]},{"name":"class MovFromFPOffset : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-f-p-offset/index.html","searchKeys":["MovFromFPOffset","class MovFromFPOffset : Rule","com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset"]},{"name":"class MovFromRegOffset : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset/index.html","searchKeys":["MovFromRegOffset","class MovFromRegOffset : Rule","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset"]},{"name":"class MovFromRegOffsetWithAdder : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset-with-adder/index.html","searchKeys":["MovFromRegOffsetWithAdder","class MovFromRegOffsetWithAdder : Rule","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder"]},{"name":"class MovOffsetToOffset : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-offset/index.html","searchKeys":["MovOffsetToOffset","class MovOffsetToOffset : Rule","com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset"]},{"name":"class MovOffsetToReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-reg/index.html","searchKeys":["MovOffsetToReg","class MovOffsetToReg : Rule","com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg"]},{"name":"class MovOffsetToValueFromPointerOffset : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-value-from-pointer-offset/index.html","searchKeys":["MovOffsetToValueFromPointerOffset","class MovOffsetToValueFromPointerOffset : Rule","com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset"]},{"name":"class MovPointerRegToReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-pointer-reg-to-reg/index.html","searchKeys":["MovPointerRegToReg","class MovPointerRegToReg : Rule","com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg"]},{"name":"class MovRegToReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MovRegToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-reg-to-reg/index.html","searchKeys":["MovRegToReg","class MovRegToReg : Rule","com.martingoe.cubelang.backend.instructionselection.MovRegToReg"]},{"name":"class MulOperationLitReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-lit-reg/index.html","searchKeys":["MulOperationLitReg","class MulOperationLitReg : Rule","com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg"]},{"name":"class MulOperationRegLit : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-lit/index.html","searchKeys":["MulOperationRegLit","class MulOperationRegLit : Rule","com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit"]},{"name":"class MulOperationRegReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-reg/index.html","searchKeys":["MulOperationRegReg","class MulOperationRegReg : Rule","com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg"]},{"name":"class NegateRule : Rule","description":"com.martingoe.cubelang.backend.instructionselection.NegateRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-negate-rule/index.html","searchKeys":["NegateRule","class NegateRule : Rule","com.martingoe.cubelang.backend.instructionselection.NegateRule"]},{"name":"class NoneType : Type","description":"com.martingoe.cubelang.common.NoneType","location":"-cubelang/com.martingoe.cubelang.common/-none-type/index.html","searchKeys":["NoneType","class NoneType : Type","com.martingoe.cubelang.common.NoneType"]},{"name":"class NormalType(type: NormalTypes) : Type","description":"com.martingoe.cubelang.common.NormalType","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/index.html","searchKeys":["NormalType","class NormalType(type: NormalTypes) : Type","com.martingoe.cubelang.common.NormalType"]},{"name":"class Operation(leftExpression: Expression, operator: Token, rightExpression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.Operation","location":"-cubelang/com.martingoe.cubelang.common/-expression/-operation/index.html","searchKeys":["Operation","class Operation(leftExpression: Expression, operator: Token, rightExpression: Expression) : Expression","com.martingoe.cubelang.common.Expression.Operation"]},{"name":"class ParseException(message: String, token: Token) : Throwable","description":"com.martingoe.cubelang.frontend.parser.ParseException","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parse-exception/index.html","searchKeys":["ParseException","class ParseException(message: String, token: Token) : Throwable","com.martingoe.cubelang.frontend.parser.ParseException"]},{"name":"class Parser(tokens: List<Token>, errorManager: ErrorManager)","description":"com.martingoe.cubelang.frontend.parser.Parser","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parser/index.html","searchKeys":["Parser","class Parser(tokens: List<Token>, errorManager: ErrorManager)","com.martingoe.cubelang.frontend.parser.Parser"]},{"name":"class PlusOperationLitReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-lit-reg/index.html","searchKeys":["PlusOperationLitReg","class PlusOperationLitReg : Rule","com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg"]},{"name":"class PlusOperationRegLit : Rule","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-lit/index.html","searchKeys":["PlusOperationRegLit","class PlusOperationRegLit : Rule","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit"]},{"name":"class PlusOperationRegReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-reg/index.html","searchKeys":["PlusOperationRegReg","class PlusOperationRegReg : Rule","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg"]},{"name":"class PointerGet : Rule","description":"com.martingoe.cubelang.backend.instructionselection.PointerGet","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-pointer-get/index.html","searchKeys":["PointerGet","class PointerGet : Rule","com.martingoe.cubelang.backend.instructionselection.PointerGet"]},{"name":"class PointerGet(expression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.PointerGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-pointer-get/index.html","searchKeys":["PointerGet","class PointerGet(expression: Expression) : Expression","com.martingoe.cubelang.common.Expression.PointerGet"]},{"name":"class PointerType(subtype: Type) : Type","description":"com.martingoe.cubelang.common.PointerType","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/index.html","searchKeys":["PointerType","class PointerType(subtype: Type) : Type","com.martingoe.cubelang.common.PointerType"]},{"name":"class RegOffset(temporaryRegister: TemporaryRegister, offset: String) : ValueType","description":"com.martingoe.cubelang.common.ir.RegOffset","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/index.html","searchKeys":["RegOffset","class RegOffset(temporaryRegister: TemporaryRegister, offset: String) : ValueType","com.martingoe.cubelang.common.ir.RegOffset"]},{"name":"class Register(index: Int, type: Type) : Expression","description":"com.martingoe.cubelang.common.Expression.Register","location":"-cubelang/com.martingoe.cubelang.common/-expression/-register/index.html","searchKeys":["Register","class Register(index: Int, type: Type) : Expression","com.martingoe.cubelang.common.Expression.Register"]},{"name":"class RegisterAllocation(emitter: ASMEmitter, errorManager: ErrorManager)","description":"com.martingoe.cubelang.backend.instructionselection.RegisterAllocation","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-register-allocation/index.html","searchKeys":["RegisterAllocation","class RegisterAllocation(emitter: ASMEmitter, errorManager: ErrorManager)","com.martingoe.cubelang.backend.instructionselection.RegisterAllocation"]},{"name":"class RegisterConfig","description":"com.martingoe.cubelang.common.RegisterConfig","location":"-cubelang/com.martingoe.cubelang.common/-register-config/index.html","searchKeys":["RegisterConfig","class RegisterConfig","com.martingoe.cubelang.common.RegisterConfig"]},{"name":"class ReturnStmnt(returnValue: Expression?) : Statement","description":"com.martingoe.cubelang.common.Statement.ReturnStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-return-stmnt/index.html","searchKeys":["ReturnStmnt","class ReturnStmnt(returnValue: Expression?) : Statement","com.martingoe.cubelang.common.Statement.ReturnStmnt"]},{"name":"class Scope(symbols: MutableList<Node>) : Node","description":"com.martingoe.cubelang.common.Scope","location":"-cubelang/com.martingoe.cubelang.common/-scope/index.html","searchKeys":["Scope","class Scope(symbols: MutableList<Node>) : Node","com.martingoe.cubelang.common.Scope"]},{"name":"class StandardLibraryFunctions","description":"com.martingoe.cubelang.common.definitions.StandardLibraryFunctions","location":"-cubelang/com.martingoe.cubelang.common.definitions/-standard-library-functions/index.html","searchKeys":["StandardLibraryFunctions","class StandardLibraryFunctions","com.martingoe.cubelang.common.definitions.StandardLibraryFunctions"]},{"name":"class StatementCompiler(emitter: ASMEmitter, astToIRService: ASTToIRService, stdlibPath: String, errorManager: ErrorManager) : Statement.StatementVisitor<Any?> ","description":"com.martingoe.cubelang.backend.StatementCompiler","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/index.html","searchKeys":["StatementCompiler","class StatementCompiler(emitter: ASMEmitter, astToIRService: ASTToIRService, stdlibPath: String, errorManager: ErrorManager) : Statement.StatementVisitor<Any?> ","com.martingoe.cubelang.backend.StatementCompiler"]},{"name":"class StringLiteral : Rule","description":"com.martingoe.cubelang.backend.instructionselection.StringLiteral","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-string-literal/index.html","searchKeys":["StringLiteral","class StringLiteral : Rule","com.martingoe.cubelang.backend.instructionselection.StringLiteral"]},{"name":"class StringLiteral(value: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.StringLiteral","location":"-cubelang/com.martingoe.cubelang.common/-expression/-string-literal/index.html","searchKeys":["StringLiteral","class StringLiteral(value: Token) : Expression","com.martingoe.cubelang.common.Expression.StringLiteral"]},{"name":"class Struct(name: String, variables: List<Pair<String, Type>>)","description":"com.martingoe.cubelang.common.definitions.Struct","location":"-cubelang/com.martingoe.cubelang.common.definitions/-struct/index.html","searchKeys":["Struct","class Struct(name: String, variables: List<Pair<String, Type>>)","com.martingoe.cubelang.common.definitions.Struct"]},{"name":"class StructDefinition(name: Token, body: List<Statement.VarInitialization>) : Statement","description":"com.martingoe.cubelang.common.Statement.StructDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-struct-definition/index.html","searchKeys":["StructDefinition","class StructDefinition(name: Token, body: List<Statement.VarInitialization>) : Statement","com.martingoe.cubelang.common.Statement.StructDefinition"]},{"name":"class StructType(typeName: String) : Type","description":"com.martingoe.cubelang.common.StructType","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/index.html","searchKeys":["StructType","class StructType(typeName: String) : Type","com.martingoe.cubelang.common.StructType"]},{"name":"class SubOperationRegLit : Rule","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-lit/index.html","searchKeys":["SubOperationRegLit","class SubOperationRegLit : Rule","com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit"]},{"name":"class SubOperationRegReg : Rule","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-reg/index.html","searchKeys":["SubOperationRegReg","class SubOperationRegReg : Rule","com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg"]},{"name":"class TemporaryRegister(index: Int) : ValueType","description":"com.martingoe.cubelang.common.ir.TemporaryRegister","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/index.html","searchKeys":["TemporaryRegister","class TemporaryRegister(index: Int) : ValueType","com.martingoe.cubelang.common.ir.TemporaryRegister"]},{"name":"class TreeRewriter : Statement.StatementVisitor<Statement> , Expression.ExpressionVisitor<Expression> ","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/index.html","searchKeys":["TreeRewriter","class TreeRewriter : Statement.StatementVisitor<Statement> , Expression.ExpressionVisitor<Expression> ","com.martingoe.cubelang.middleend.treemodification.TreeRewriter"]},{"name":"class TrieEntry(value: Char, length: Int)","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/index.html","searchKeys":["TrieEntry","class TrieEntry(value: Char, length: Int)","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry"]},{"name":"class TypeChecker(expressions: List<Statement>, errorManager: ErrorManager) : Expression.ExpressionVisitor<Type> , Statement.StatementVisitor<Type> ","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/index.html","searchKeys":["TypeChecker","class TypeChecker(expressions: List<Statement>, errorManager: ErrorManager) : Expression.ExpressionVisitor<Type> , Statement.StatementVisitor<Type> ","com.martingoe.cubelang.frontend.semantic.TypeChecker"]},{"name":"class Unary(identifier: Token, expression: Expression) : Expression","description":"com.martingoe.cubelang.common.Expression.Unary","location":"-cubelang/com.martingoe.cubelang.common/-expression/-unary/index.html","searchKeys":["Unary","class Unary(identifier: Token, expression: Expression) : Expression","com.martingoe.cubelang.common.Expression.Unary"]},{"name":"class Utils","description":"com.martingoe.cubelang.backend.Utils","location":"-cubelang/com.martingoe.cubelang.backend/-utils/index.html","searchKeys":["Utils","class Utils","com.martingoe.cubelang.backend.Utils"]},{"name":"class ValueFromPointer : Rule","description":"com.martingoe.cubelang.backend.instructionselection.ValueFromPointer","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-value-from-pointer/index.html","searchKeys":["ValueFromPointer","class ValueFromPointer : Rule","com.martingoe.cubelang.backend.instructionselection.ValueFromPointer"]},{"name":"class ValueFromPointer(expression: Expression, star: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.ValueFromPointer","location":"-cubelang/com.martingoe.cubelang.common/-expression/-value-from-pointer/index.html","searchKeys":["ValueFromPointer","class ValueFromPointer(expression: Expression, star: Token) : Expression","com.martingoe.cubelang.common.Expression.ValueFromPointer"]},{"name":"class VarCall(varName: Token) : Expression","description":"com.martingoe.cubelang.common.Expression.VarCall","location":"-cubelang/com.martingoe.cubelang.common/-expression/-var-call/index.html","searchKeys":["VarCall","class VarCall(varName: Token) : Expression","com.martingoe.cubelang.common.Expression.VarCall"]},{"name":"class VarInitialization(name: Token, type: Type, valueExpression: Expression?) : Statement","description":"com.martingoe.cubelang.common.Statement.VarInitialization","location":"-cubelang/com.martingoe.cubelang.common/-statement/-var-initialization/index.html","searchKeys":["VarInitialization","class VarInitialization(name: Token, type: Type, valueExpression: Expression?) : Statement","com.martingoe.cubelang.common.Statement.VarInitialization"]},{"name":"class VarNode(name: String, type: Type, offset: Int) : Node","description":"com.martingoe.cubelang.common.VarNode","location":"-cubelang/com.martingoe.cubelang.common/-var-node/index.html","searchKeys":["VarNode","class VarNode(name: String, type: Type, offset: Int) : Node","com.martingoe.cubelang.common.VarNode"]},{"name":"class WhileStmnt(condition: Expression, body: Statement) : Statement","description":"com.martingoe.cubelang.common.Statement.WhileStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-while-stmnt/index.html","searchKeys":["WhileStmnt","class WhileStmnt(condition: Expression, body: Statement) : Statement","com.martingoe.cubelang.common.Statement.WhileStmnt"]},{"name":"const val ANSI_BLACK: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_BLACK","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-b-l-a-c-k.html","searchKeys":["ANSI_BLACK","const val ANSI_BLACK: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_BLACK"]},{"name":"const val ANSI_BLUE: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_BLUE","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-b-l-u-e.html","searchKeys":["ANSI_BLUE","const val ANSI_BLUE: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_BLUE"]},{"name":"const val ANSI_CYAN: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_CYAN","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-c-y-a-n.html","searchKeys":["ANSI_CYAN","const val ANSI_CYAN: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_CYAN"]},{"name":"const val ANSI_GREEN: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_GREEN","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-g-r-e-e-n.html","searchKeys":["ANSI_GREEN","const val ANSI_GREEN: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_GREEN"]},{"name":"const val ANSI_PURPLE: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_PURPLE","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-p-u-r-p-l-e.html","searchKeys":["ANSI_PURPLE","const val ANSI_PURPLE: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_PURPLE"]},{"name":"const val ANSI_RED: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_RED","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-r-e-d.html","searchKeys":["ANSI_RED","const val ANSI_RED: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_RED"]},{"name":"const val ANSI_RESET: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_RESET","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-r-e-s-e-t.html","searchKeys":["ANSI_RESET","const val ANSI_RESET: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_RESET"]},{"name":"const val ANSI_WHITE: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_WHITE","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-w-h-i-t-e.html","searchKeys":["ANSI_WHITE","const val ANSI_WHITE: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_WHITE"]},{"name":"const val ANSI_YELLOW: String","description":"com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_YELLOW","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/-a-n-s-i_-y-e-l-l-o-w.html","searchKeys":["ANSI_YELLOW","const val ANSI_YELLOW: String","com.martingoe.cubelang.common.ConsoleColor.Companion.ANSI_YELLOW"]},{"name":"const val REGISTER_ARG_COUNT: Int = 6","description":"com.martingoe.cubelang.common.RegisterConfig.Companion.REGISTER_ARG_COUNT","location":"-cubelang/com.martingoe.cubelang.common/-register-config/-companion/-r-e-g-i-s-t-e-r_-a-r-g_-c-o-u-n-t.html","searchKeys":["REGISTER_ARG_COUNT","const val REGISTER_ARG_COUNT: Int = 6","com.martingoe.cubelang.common.RegisterConfig.Companion.REGISTER_ARG_COUNT"]},{"name":"const val REGISTER_TEMP_COUNT: Int = 6","description":"com.martingoe.cubelang.common.RegisterConfig.Companion.REGISTER_TEMP_COUNT","location":"-cubelang/com.martingoe.cubelang.common/-register-config/-companion/-r-e-g-i-s-t-e-r_-t-e-m-p_-c-o-u-n-t.html","searchKeys":["REGISTER_TEMP_COUNT","const val REGISTER_TEMP_COUNT: Int = 6","com.martingoe.cubelang.common.RegisterConfig.Companion.REGISTER_TEMP_COUNT"]},{"name":"const val RULE_COUNT: Int = 26","description":"com.martingoe.cubelang.backend.instructionselection.Rule.Companion.RULE_COUNT","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/-companion/-r-u-l-e_-c-o-u-n-t.html","searchKeys":["RULE_COUNT","const val RULE_COUNT: Int = 26","com.martingoe.cubelang.backend.instructionselection.Rule.Companion.RULE_COUNT"]},{"name":"data class CurrentActiveRegisterLiveInterval(regIndex: Int, start: Int, end: Int)","description":"com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-current-active-register-live-interval/index.html","searchKeys":["CurrentActiveRegisterLiveInterval","data class CurrentActiveRegisterLiveInterval(regIndex: Int, start: Int, end: Int)","com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval"]},{"name":"data class Function(name: String, args: Map<String, Type>, returnType: Type?)","description":"com.martingoe.cubelang.common.definitions.Function","location":"-cubelang/com.martingoe.cubelang.common.definitions/-function/index.html","searchKeys":["Function","data class Function(name: String, args: Map<String, Type>, returnType: Type?)","com.martingoe.cubelang.common.definitions.Function"]},{"name":"data class Token(substring: String, tokenType: TokenType, line: Int, index: Int)","description":"com.martingoe.cubelang.common.tokens.Token","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/index.html","searchKeys":["Token","data class Token(substring: String, tokenType: TokenType, line: Int, index: Int)","com.martingoe.cubelang.common.tokens.Token"]},{"name":"data class VirtualRegisterLiveInterval(virtualRegIndex: Int, start: Int, end: Int)","description":"com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-virtual-register-live-interval/index.html","searchKeys":["VirtualRegisterLiveInterval","data class VirtualRegisterLiveInterval(virtualRegIndex: Int, start: Int, end: Int)","com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval"]},{"name":"enum IRType : Enum<IRType> ","description":"com.martingoe.cubelang.common.ir.IRType","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-type/index.html","searchKeys":["IRType","enum IRType : Enum<IRType> ","com.martingoe.cubelang.common.ir.IRType"]},{"name":"enum NormalTypes : Enum<NormalTypes> ","description":"com.martingoe.cubelang.common.NormalTypes","location":"-cubelang/com.martingoe.cubelang.common/-normal-types/index.html","searchKeys":["NormalTypes","enum NormalTypes : Enum<NormalTypes> ","com.martingoe.cubelang.common.NormalTypes"]},{"name":"enum TokenType : Enum<TokenType> ","description":"com.martingoe.cubelang.common.tokens.TokenType","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token-type/index.html","searchKeys":["TokenType","enum TokenType : Enum<TokenType> ","com.martingoe.cubelang.common.tokens.TokenType"]},{"name":"fun ASMEmitter()","description":"com.martingoe.cubelang.common.ASMEmitter.ASMEmitter","location":"-cubelang/com.martingoe.cubelang.common/-a-s-m-emitter/-a-s-m-emitter.html","searchKeys":["ASMEmitter","fun ASMEmitter()","com.martingoe.cubelang.common.ASMEmitter.ASMEmitter"]},{"name":"fun ASTGetSymbol()","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.ASTGetSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/-a-s-t-get-symbol.html","searchKeys":["ASTGetSymbol","fun ASTGetSymbol()","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.ASTGetSymbol"]},{"name":"fun ASTToIRService(asmEmitter: ASMEmitter)","description":"com.martingoe.cubelang.backend.instructionselection.ASTToIRService.ASTToIRService","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-to-i-r-service/-a-s-t-to-i-r-service.html","searchKeys":["ASTToIRService","fun ASTToIRService(asmEmitter: ASMEmitter)","com.martingoe.cubelang.backend.instructionselection.ASTToIRService.ASTToIRService"]},{"name":"fun ArgumentDefinition(name: Token, type: Type)","description":"com.martingoe.cubelang.common.Statement.ArgumentDefinition.ArgumentDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-argument-definition/-argument-definition.html","searchKeys":["ArgumentDefinition","fun ArgumentDefinition(name: Token, type: Type)","com.martingoe.cubelang.common.Statement.ArgumentDefinition.ArgumentDefinition"]},{"name":"fun ArrayGet(expression: Expression, inBrackets: Expression, bracket: Token)","description":"com.martingoe.cubelang.common.Expression.ArrayGet.ArrayGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-array-get/-array-get.html","searchKeys":["ArrayGet","fun ArrayGet(expression: Expression, inBrackets: Expression, bracket: Token)","com.martingoe.cubelang.common.Expression.ArrayGet.ArrayGet"]},{"name":"fun ArrayType(subType: Type, count: Int)","description":"com.martingoe.cubelang.common.ArrayType.ArrayType","location":"-cubelang/com.martingoe.cubelang.common/-array-type/-array-type.html","searchKeys":["ArrayType","fun ArrayType(subType: Type, count: Int)","com.martingoe.cubelang.common.ArrayType.ArrayType"]},{"name":"fun Assignment(leftSide: Expression, valueExpression: Expression, equals: Token = Token(\"=\", TokenType.EQUALS))","description":"com.martingoe.cubelang.common.Expression.Assignment.Assignment","location":"-cubelang/com.martingoe.cubelang.common/-expression/-assignment/-assignment.html","searchKeys":["Assignment","fun Assignment(leftSide: Expression, valueExpression: Expression, equals: Token = Token(\"=\", TokenType.EQUALS))","com.martingoe.cubelang.common.Expression.Assignment.Assignment"]},{"name":"fun BlockStatement(statements: List<Statement>)","description":"com.martingoe.cubelang.common.Statement.BlockStatement.BlockStatement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-block-statement/-block-statement.html","searchKeys":["BlockStatement","fun BlockStatement(statements: List<Statement>)","com.martingoe.cubelang.common.Statement.BlockStatement.BlockStatement"]},{"name":"fun Call(callee: Expression.VarCall, arguments: List<Expression>, bracket: Token)","description":"com.martingoe.cubelang.common.Expression.Call.Call","location":"-cubelang/com.martingoe.cubelang.common/-expression/-call/-call.html","searchKeys":["Call","fun Call(callee: Expression.VarCall, arguments: List<Expression>, bracket: Token)","com.martingoe.cubelang.common.Expression.Call.Call"]},{"name":"fun CallRule()","description":"com.martingoe.cubelang.backend.instructionselection.CallRule.CallRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-call-rule/-call-rule.html","searchKeys":["CallRule","fun CallRule()","com.martingoe.cubelang.backend.instructionselection.CallRule.CallRule"]},{"name":"fun Comparison(leftExpression: Expression, comparator: Token, rightExpression: Expression)","description":"com.martingoe.cubelang.common.Expression.Comparison.Comparison","location":"-cubelang/com.martingoe.cubelang.common/-expression/-comparison/-comparison.html","searchKeys":["Comparison","fun Comparison(leftExpression: Expression, comparator: Token, rightExpression: Expression)","com.martingoe.cubelang.common.Expression.Comparison.Comparison"]},{"name":"fun ComparisonRegReg()","description":"com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.ComparisonRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-comparison-reg-reg/-comparison-reg-reg.html","searchKeys":["ComparisonRegReg","fun ComparisonRegReg()","com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.ComparisonRegReg"]},{"name":"fun ConsoleColor()","description":"com.martingoe.cubelang.common.ConsoleColor.ConsoleColor","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-console-color.html","searchKeys":["ConsoleColor","fun ConsoleColor()","com.martingoe.cubelang.common.ConsoleColor.ConsoleColor"]},{"name":"fun CurrentActiveRegisterLiveInterval(regIndex: Int, start: Int, end: Int)","description":"com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.CurrentActiveRegisterLiveInterval","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-current-active-register-live-interval/-current-active-register-live-interval.html","searchKeys":["CurrentActiveRegisterLiveInterval","fun CurrentActiveRegisterLiveInterval(regIndex: Int, start: Int, end: Int)","com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.CurrentActiveRegisterLiveInterval"]},{"name":"fun DivOperationRegReg()","description":"com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.DivOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-div-operation-reg-reg/-div-operation-reg-reg.html","searchKeys":["DivOperationRegReg","fun DivOperationRegReg()","com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.DivOperationRegReg"]},{"name":"fun Empty()","description":"com.martingoe.cubelang.common.Statement.Empty.Empty","location":"-cubelang/com.martingoe.cubelang.common/-statement/-empty/-empty.html","searchKeys":["Empty","fun Empty()","com.martingoe.cubelang.common.Statement.Empty.Empty"]},{"name":"fun ErrorManager(lines: List<String>, exitAfterError: Boolean)","description":"com.martingoe.cubelang.common.errors.ErrorManager.ErrorManager","location":"-cubelang/com.martingoe.cubelang.common.errors/-error-manager/-error-manager.html","searchKeys":["ErrorManager","fun ErrorManager(lines: List<String>, exitAfterError: Boolean)","com.martingoe.cubelang.common.errors.ErrorManager.ErrorManager"]},{"name":"fun Expression(state: Int = 0, matchedResults: MutableMap<Char, Int> = HashMap(), cost: MutableMap<Char, Int> = HashMap(), ruleMatchingBytes: IntArray = Array(Rule.RULE_COUNT) { 0 }, resultType: Type = NoneType())","description":"com.martingoe.cubelang.common.Expression.Expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression.html","searchKeys":["Expression","fun Expression(state: Int = 0, matchedResults: MutableMap<Char, Int> = HashMap(), cost: MutableMap<Char, Int> = HashMap(), ruleMatchingBytes: IntArray = Array(Rule.RULE_COUNT) { 0 }, resultType: Type = NoneType())","com.martingoe.cubelang.common.Expression.Expression"]},{"name":"fun ExpressionMatchingTrie(rules: Array<Rule>, astGetSymbol: ASTGetSymbol)","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.ExpressionMatchingTrie","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-expression-matching-trie.html","searchKeys":["ExpressionMatchingTrie","fun ExpressionMatchingTrie(rules: Array<Rule>, astGetSymbol: ASTGetSymbol)","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.ExpressionMatchingTrie"]},{"name":"fun ExpressionStatement(expression: Expression)","description":"com.martingoe.cubelang.common.Statement.ExpressionStatement.ExpressionStatement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-expression-statement/-expression-statement.html","searchKeys":["ExpressionStatement","fun ExpressionStatement(expression: Expression)","com.martingoe.cubelang.common.Statement.ExpressionStatement.ExpressionStatement"]},{"name":"fun ExtendTo64Bit(expression: Expression)","description":"com.martingoe.cubelang.common.Expression.ExtendTo64Bit.ExtendTo64Bit","location":"-cubelang/com.martingoe.cubelang.common/-expression/-extend-to64-bit/-extend-to64-bit.html","searchKeys":["ExtendTo64Bit","fun ExtendTo64Bit(expression: Expression)","com.martingoe.cubelang.common.Expression.ExtendTo64Bit.ExtendTo64Bit"]},{"name":"fun ExtendTo64BitsRule()","description":"com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.ExtendTo64BitsRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-extend-to64-bits-rule/-extend-to64-bits-rule.html","searchKeys":["ExtendTo64BitsRule","fun ExtendTo64BitsRule()","com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.ExtendTo64BitsRule"]},{"name":"fun ExternFunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type)","description":"com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.ExternFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-extern-function-definition/-extern-function-definition.html","searchKeys":["ExternFunctionDefinition","fun ExternFunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type)","com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.ExternFunctionDefinition"]},{"name":"fun FileSymbolTable()","description":"com.martingoe.cubelang.common.FileSymbolTable.FileSymbolTable","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/-file-symbol-table.html","searchKeys":["FileSymbolTable","fun FileSymbolTable()","com.martingoe.cubelang.common.FileSymbolTable.FileSymbolTable"]},{"name":"fun ForStmnt(inBrackets: List<Statement>, body: Statement)","description":"com.martingoe.cubelang.common.Statement.ForStmnt.ForStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-for-stmnt/-for-stmnt.html","searchKeys":["ForStmnt","fun ForStmnt(inBrackets: List<Statement>, body: Statement)","com.martingoe.cubelang.common.Statement.ForStmnt.ForStmnt"]},{"name":"fun FramePointer()","description":"com.martingoe.cubelang.common.Expression.FramePointer.FramePointer","location":"-cubelang/com.martingoe.cubelang.common/-expression/-frame-pointer/-frame-pointer.html","searchKeys":["FramePointer","fun FramePointer()","com.martingoe.cubelang.common.Expression.FramePointer.FramePointer"]},{"name":"fun FramePointer()","description":"com.martingoe.cubelang.common.ir.FramePointer.FramePointer","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer/-frame-pointer.html","searchKeys":["FramePointer","fun FramePointer()","com.martingoe.cubelang.common.ir.FramePointer.FramePointer"]},{"name":"fun FramePointerOffset(literal: String, temporaryRegister: TemporaryRegister? = null, offset: String? = null)","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.FramePointerOffset","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/-frame-pointer-offset.html","searchKeys":["FramePointerOffset","fun FramePointerOffset(literal: String, temporaryRegister: TemporaryRegister? = null, offset: String? = null)","com.martingoe.cubelang.common.ir.FramePointerOffset.FramePointerOffset"]},{"name":"fun FramePointerRule()","description":"com.martingoe.cubelang.backend.instructionselection.FramePointerRule.FramePointerRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-frame-pointer-rule/-frame-pointer-rule.html","searchKeys":["FramePointerRule","fun FramePointerRule()","com.martingoe.cubelang.backend.instructionselection.FramePointerRule.FramePointerRule"]},{"name":"fun Function(name: String, args: Map<String, Type>, returnType: Type?)","description":"com.martingoe.cubelang.common.definitions.Function.Function","location":"-cubelang/com.martingoe.cubelang.common.definitions/-function/-function.html","searchKeys":["Function","fun Function(name: String, args: Map<String, Type>, returnType: Type?)","com.martingoe.cubelang.common.definitions.Function.Function"]},{"name":"fun FunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type, body: Statement)","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition.FunctionDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/-function-definition.html","searchKeys":["FunctionDefinition","fun FunctionDefinition(name: Token, args: List<Statement.ArgumentDefinition>, type: Type, body: Statement)","com.martingoe.cubelang.common.Statement.FunctionDefinition.FunctionDefinition"]},{"name":"fun FunctionLabel(name: String)","description":"com.martingoe.cubelang.common.ir.FunctionLabel.FunctionLabel","location":"-cubelang/com.martingoe.cubelang.common.ir/-function-label/-function-label.html","searchKeys":["FunctionLabel","fun FunctionLabel(name: String)","com.martingoe.cubelang.common.ir.FunctionLabel.FunctionLabel"]},{"name":"fun Grouping(expression: Expression)","description":"com.martingoe.cubelang.common.Expression.Grouping.Grouping","location":"-cubelang/com.martingoe.cubelang.common/-expression/-grouping/-grouping.html","searchKeys":["Grouping","fun Grouping(expression: Expression)","com.martingoe.cubelang.common.Expression.Grouping.Grouping"]},{"name":"fun IRLiteral(value: String)","description":"com.martingoe.cubelang.common.ir.IRLiteral.IRLiteral","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-literal/-i-r-literal.html","searchKeys":["IRLiteral","fun IRLiteral(value: String)","com.martingoe.cubelang.common.ir.IRLiteral.IRLiteral"]},{"name":"fun IRToASM()","description":"com.martingoe.cubelang.backend.IRToASM.IRToASM","location":"-cubelang/com.martingoe.cubelang.backend/-i-r-to-a-s-m/-i-r-to-a-s-m.html","searchKeys":["IRToASM","fun IRToASM()","com.martingoe.cubelang.backend.IRToASM.IRToASM"]},{"name":"fun IRValue(type: IRType, arg0: ValueType?, arg1: ValueType?, resultType: Type)","description":"com.martingoe.cubelang.common.ir.IRValue.IRValue","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/-i-r-value.html","searchKeys":["IRValue","fun IRValue(type: IRType, arg0: ValueType?, arg1: ValueType?, resultType: Type)","com.martingoe.cubelang.common.ir.IRValue.IRValue"]},{"name":"fun IfStmnt(condition: Expression, ifBody: Statement, elseBody: Statement?)","description":"com.martingoe.cubelang.common.Statement.IfStmnt.IfStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-if-stmnt/-if-stmnt.html","searchKeys":["IfStmnt","fun IfStmnt(condition: Expression, ifBody: Statement, elseBody: Statement?)","com.martingoe.cubelang.common.Statement.IfStmnt.IfStmnt"]},{"name":"fun ImportStmnt(identifier: Token)","description":"com.martingoe.cubelang.common.Statement.ImportStmnt.ImportStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-import-stmnt/-import-stmnt.html","searchKeys":["ImportStmnt","fun ImportStmnt(identifier: Token)","com.martingoe.cubelang.common.Statement.ImportStmnt.ImportStmnt"]},{"name":"fun InstanceGet(expression: Expression, identifier: Token)","description":"com.martingoe.cubelang.common.Expression.InstanceGet.InstanceGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-instance-get/-instance-get.html","searchKeys":["InstanceGet","fun InstanceGet(expression: Expression, identifier: Token)","com.martingoe.cubelang.common.Expression.InstanceGet.InstanceGet"]},{"name":"fun Lexer(fileContent: String)","description":"com.martingoe.cubelang.frontend.lexing.Lexer.Lexer","location":"-cubelang/com.martingoe.cubelang.frontend.lexing/-lexer/-lexer.html","searchKeys":["Lexer","fun Lexer(fileContent: String)","com.martingoe.cubelang.frontend.lexing.Lexer.Lexer"]},{"name":"fun Literal(value: Any?, token: Token? = null)","description":"com.martingoe.cubelang.common.Expression.Literal.Literal","location":"-cubelang/com.martingoe.cubelang.common/-expression/-literal/-literal.html","searchKeys":["Literal","fun Literal(value: Any?, token: Token? = null)","com.martingoe.cubelang.common.Expression.Literal.Literal"]},{"name":"fun LiteralToReg()","description":"com.martingoe.cubelang.backend.instructionselection.LiteralToReg.LiteralToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-literal-to-reg/-literal-to-reg.html","searchKeys":["LiteralToReg","fun LiteralToReg()","com.martingoe.cubelang.backend.instructionselection.LiteralToReg.LiteralToReg"]},{"name":"fun Logical(leftExpression: Expression, logical: Token, rightExpression: Expression)","description":"com.martingoe.cubelang.common.Expression.Logical.Logical","location":"-cubelang/com.martingoe.cubelang.common/-expression/-logical/-logical.html","searchKeys":["Logical","fun Logical(leftExpression: Expression, logical: Token, rightExpression: Expression)","com.martingoe.cubelang.common.Expression.Logical.Logical"]},{"name":"fun Main(libraryPath: String)","description":"com.martingoe.cubelang.main.Main.Main","location":"-cubelang/com.martingoe.cubelang.main/-main/-main.html","searchKeys":["Main","fun Main(libraryPath: String)","com.martingoe.cubelang.main.Main.Main"]},{"name":"fun MovFromFPOffset()","description":"com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.MovFromFPOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-f-p-offset/-mov-from-f-p-offset.html","searchKeys":["MovFromFPOffset","fun MovFromFPOffset()","com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.MovFromFPOffset"]},{"name":"fun MovFromRegOffset()","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.MovFromRegOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset/-mov-from-reg-offset.html","searchKeys":["MovFromRegOffset","fun MovFromRegOffset()","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.MovFromRegOffset"]},{"name":"fun MovFromRegOffsetWithAdder()","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.MovFromRegOffsetWithAdder","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset-with-adder/-mov-from-reg-offset-with-adder.html","searchKeys":["MovFromRegOffsetWithAdder","fun MovFromRegOffsetWithAdder()","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.MovFromRegOffsetWithAdder"]},{"name":"fun MovOffsetToOffset()","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.MovOffsetToOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-offset/-mov-offset-to-offset.html","searchKeys":["MovOffsetToOffset","fun MovOffsetToOffset()","com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.MovOffsetToOffset"]},{"name":"fun MovOffsetToReg()","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.MovOffsetToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-reg/-mov-offset-to-reg.html","searchKeys":["MovOffsetToReg","fun MovOffsetToReg()","com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.MovOffsetToReg"]},{"name":"fun MovOffsetToValueFromPointerOffset()","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.MovOffsetToValueFromPointerOffset","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-value-from-pointer-offset/-mov-offset-to-value-from-pointer-offset.html","searchKeys":["MovOffsetToValueFromPointerOffset","fun MovOffsetToValueFromPointerOffset()","com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.MovOffsetToValueFromPointerOffset"]},{"name":"fun MovPointerRegToReg()","description":"com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.MovPointerRegToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-pointer-reg-to-reg/-mov-pointer-reg-to-reg.html","searchKeys":["MovPointerRegToReg","fun MovPointerRegToReg()","com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.MovPointerRegToReg"]},{"name":"fun MovRegToReg()","description":"com.martingoe.cubelang.backend.instructionselection.MovRegToReg.MovRegToReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-reg-to-reg/-mov-reg-to-reg.html","searchKeys":["MovRegToReg","fun MovRegToReg()","com.martingoe.cubelang.backend.instructionselection.MovRegToReg.MovRegToReg"]},{"name":"fun MulOperationLitReg()","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.MulOperationLitReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-lit-reg/-mul-operation-lit-reg.html","searchKeys":["MulOperationLitReg","fun MulOperationLitReg()","com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.MulOperationLitReg"]},{"name":"fun MulOperationRegLit()","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.MulOperationRegLit","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-lit/-mul-operation-reg-lit.html","searchKeys":["MulOperationRegLit","fun MulOperationRegLit()","com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.MulOperationRegLit"]},{"name":"fun MulOperationRegReg()","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.MulOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-reg/-mul-operation-reg-reg.html","searchKeys":["MulOperationRegReg","fun MulOperationRegReg()","com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.MulOperationRegReg"]},{"name":"fun NegateRule()","description":"com.martingoe.cubelang.backend.instructionselection.NegateRule.NegateRule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-negate-rule/-negate-rule.html","searchKeys":["NegateRule","fun NegateRule()","com.martingoe.cubelang.backend.instructionselection.NegateRule.NegateRule"]},{"name":"fun Node()","description":"com.martingoe.cubelang.common.Node.Node","location":"-cubelang/com.martingoe.cubelang.common/-node/-node.html","searchKeys":["Node","fun Node()","com.martingoe.cubelang.common.Node.Node"]},{"name":"fun NoneType()","description":"com.martingoe.cubelang.common.NoneType.NoneType","location":"-cubelang/com.martingoe.cubelang.common/-none-type/-none-type.html","searchKeys":["NoneType","fun NoneType()","com.martingoe.cubelang.common.NoneType.NoneType"]},{"name":"fun NormalType(type: NormalTypes)","description":"com.martingoe.cubelang.common.NormalType.NormalType","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/-normal-type.html","searchKeys":["NormalType","fun NormalType(type: NormalTypes)","com.martingoe.cubelang.common.NormalType.NormalType"]},{"name":"fun Operation(leftExpression: Expression, operator: Token, rightExpression: Expression)","description":"com.martingoe.cubelang.common.Expression.Operation.Operation","location":"-cubelang/com.martingoe.cubelang.common/-expression/-operation/-operation.html","searchKeys":["Operation","fun Operation(leftExpression: Expression, operator: Token, rightExpression: Expression)","com.martingoe.cubelang.common.Expression.Operation.Operation"]},{"name":"fun ParseException(message: String, token: Token)","description":"com.martingoe.cubelang.frontend.parser.ParseException.ParseException","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parse-exception/-parse-exception.html","searchKeys":["ParseException","fun ParseException(message: String, token: Token)","com.martingoe.cubelang.frontend.parser.ParseException.ParseException"]},{"name":"fun Parser(tokens: List<Token>, errorManager: ErrorManager)","description":"com.martingoe.cubelang.frontend.parser.Parser.Parser","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parser/-parser.html","searchKeys":["Parser","fun Parser(tokens: List<Token>, errorManager: ErrorManager)","com.martingoe.cubelang.frontend.parser.Parser.Parser"]},{"name":"fun PlusOperationLitReg()","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.PlusOperationLitReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-lit-reg/-plus-operation-lit-reg.html","searchKeys":["PlusOperationLitReg","fun PlusOperationLitReg()","com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.PlusOperationLitReg"]},{"name":"fun PlusOperationRegLit()","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.PlusOperationRegLit","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-lit/-plus-operation-reg-lit.html","searchKeys":["PlusOperationRegLit","fun PlusOperationRegLit()","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.PlusOperationRegLit"]},{"name":"fun PlusOperationRegReg()","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.PlusOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-reg/-plus-operation-reg-reg.html","searchKeys":["PlusOperationRegReg","fun PlusOperationRegReg()","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.PlusOperationRegReg"]},{"name":"fun PointerGet()","description":"com.martingoe.cubelang.backend.instructionselection.PointerGet.PointerGet","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-pointer-get/-pointer-get.html","searchKeys":["PointerGet","fun PointerGet()","com.martingoe.cubelang.backend.instructionselection.PointerGet.PointerGet"]},{"name":"fun PointerGet(expression: Expression)","description":"com.martingoe.cubelang.common.Expression.PointerGet.PointerGet","location":"-cubelang/com.martingoe.cubelang.common/-expression/-pointer-get/-pointer-get.html","searchKeys":["PointerGet","fun PointerGet(expression: Expression)","com.martingoe.cubelang.common.Expression.PointerGet.PointerGet"]},{"name":"fun PointerType(subtype: Type)","description":"com.martingoe.cubelang.common.PointerType.PointerType","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/-pointer-type.html","searchKeys":["PointerType","fun PointerType(subtype: Type)","com.martingoe.cubelang.common.PointerType.PointerType"]},{"name":"fun RegOffset(temporaryRegister: TemporaryRegister, offset: String)","description":"com.martingoe.cubelang.common.ir.RegOffset.RegOffset","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/-reg-offset.html","searchKeys":["RegOffset","fun RegOffset(temporaryRegister: TemporaryRegister, offset: String)","com.martingoe.cubelang.common.ir.RegOffset.RegOffset"]},{"name":"fun Register(index: Int = -1, type: Type = NoneType())","description":"com.martingoe.cubelang.common.Expression.Register.Register","location":"-cubelang/com.martingoe.cubelang.common/-expression/-register/-register.html","searchKeys":["Register","fun Register(index: Int = -1, type: Type = NoneType())","com.martingoe.cubelang.common.Expression.Register.Register"]},{"name":"fun RegisterAllocation(emitter: ASMEmitter, errorManager: ErrorManager)","description":"com.martingoe.cubelang.backend.instructionselection.RegisterAllocation.RegisterAllocation","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-register-allocation/-register-allocation.html","searchKeys":["RegisterAllocation","fun RegisterAllocation(emitter: ASMEmitter, errorManager: ErrorManager)","com.martingoe.cubelang.backend.instructionselection.RegisterAllocation.RegisterAllocation"]},{"name":"fun RegisterConfig()","description":"com.martingoe.cubelang.common.RegisterConfig.RegisterConfig","location":"-cubelang/com.martingoe.cubelang.common/-register-config/-register-config.html","searchKeys":["RegisterConfig","fun RegisterConfig()","com.martingoe.cubelang.common.RegisterConfig.RegisterConfig"]},{"name":"fun ReturnStmnt(returnValue: Expression?)","description":"com.martingoe.cubelang.common.Statement.ReturnStmnt.ReturnStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-return-stmnt/-return-stmnt.html","searchKeys":["ReturnStmnt","fun ReturnStmnt(returnValue: Expression?)","com.martingoe.cubelang.common.Statement.ReturnStmnt.ReturnStmnt"]},{"name":"fun Rule()","description":"com.martingoe.cubelang.backend.instructionselection.Rule.Rule","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/-rule.html","searchKeys":["Rule","fun Rule()","com.martingoe.cubelang.backend.instructionselection.Rule.Rule"]},{"name":"fun Scope(symbols: MutableList<Node>)","description":"com.martingoe.cubelang.common.Scope.Scope","location":"-cubelang/com.martingoe.cubelang.common/-scope/-scope.html","searchKeys":["Scope","fun Scope(symbols: MutableList<Node>)","com.martingoe.cubelang.common.Scope.Scope"]},{"name":"fun StandardLibraryFunctions()","description":"com.martingoe.cubelang.common.definitions.StandardLibraryFunctions.StandardLibraryFunctions","location":"-cubelang/com.martingoe.cubelang.common.definitions/-standard-library-functions/-standard-library-functions.html","searchKeys":["StandardLibraryFunctions","fun StandardLibraryFunctions()","com.martingoe.cubelang.common.definitions.StandardLibraryFunctions.StandardLibraryFunctions"]},{"name":"fun Statement()","description":"com.martingoe.cubelang.common.Statement.Statement","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement.html","searchKeys":["Statement","fun Statement()","com.martingoe.cubelang.common.Statement.Statement"]},{"name":"fun StatementCompiler(emitter: ASMEmitter, astToIRService: ASTToIRService, stdlibPath: String, errorManager: ErrorManager)","description":"com.martingoe.cubelang.backend.StatementCompiler.StatementCompiler","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/-statement-compiler.html","searchKeys":["StatementCompiler","fun StatementCompiler(emitter: ASMEmitter, astToIRService: ASTToIRService, stdlibPath: String, errorManager: ErrorManager)","com.martingoe.cubelang.backend.StatementCompiler.StatementCompiler"]},{"name":"fun StringLiteral()","description":"com.martingoe.cubelang.backend.instructionselection.StringLiteral.StringLiteral","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-string-literal/-string-literal.html","searchKeys":["StringLiteral","fun StringLiteral()","com.martingoe.cubelang.backend.instructionselection.StringLiteral.StringLiteral"]},{"name":"fun StringLiteral(value: Token)","description":"com.martingoe.cubelang.common.Expression.StringLiteral.StringLiteral","location":"-cubelang/com.martingoe.cubelang.common/-expression/-string-literal/-string-literal.html","searchKeys":["StringLiteral","fun StringLiteral(value: Token)","com.martingoe.cubelang.common.Expression.StringLiteral.StringLiteral"]},{"name":"fun Struct(name: String, variables: List<Pair<String, Type>>)","description":"com.martingoe.cubelang.common.definitions.Struct.Struct","location":"-cubelang/com.martingoe.cubelang.common.definitions/-struct/-struct.html","searchKeys":["Struct","fun Struct(name: String, variables: List<Pair<String, Type>>)","com.martingoe.cubelang.common.definitions.Struct.Struct"]},{"name":"fun StructDefinition(name: Token, body: List<Statement.VarInitialization>)","description":"com.martingoe.cubelang.common.Statement.StructDefinition.StructDefinition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-struct-definition/-struct-definition.html","searchKeys":["StructDefinition","fun StructDefinition(name: Token, body: List<Statement.VarInitialization>)","com.martingoe.cubelang.common.Statement.StructDefinition.StructDefinition"]},{"name":"fun StructType(typeName: String)","description":"com.martingoe.cubelang.common.StructType.StructType","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/-struct-type.html","searchKeys":["StructType","fun StructType(typeName: String)","com.martingoe.cubelang.common.StructType.StructType"]},{"name":"fun SubOperationRegLit()","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.SubOperationRegLit","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-lit/-sub-operation-reg-lit.html","searchKeys":["SubOperationRegLit","fun SubOperationRegLit()","com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.SubOperationRegLit"]},{"name":"fun SubOperationRegReg()","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.SubOperationRegReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-reg/-sub-operation-reg-reg.html","searchKeys":["SubOperationRegReg","fun SubOperationRegReg()","com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.SubOperationRegReg"]},{"name":"fun TemporaryRegister(index: Int)","description":"com.martingoe.cubelang.common.ir.TemporaryRegister.TemporaryRegister","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/-temporary-register.html","searchKeys":["TemporaryRegister","fun TemporaryRegister(index: Int)","com.martingoe.cubelang.common.ir.TemporaryRegister.TemporaryRegister"]},{"name":"fun Token(substring: String, tokenType: TokenType, line: Int = -1, index: Int = -1)","description":"com.martingoe.cubelang.common.tokens.Token.Token","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/-token.html","searchKeys":["Token","fun Token(substring: String, tokenType: TokenType, line: Int = -1, index: Int = -1)","com.martingoe.cubelang.common.tokens.Token.Token"]},{"name":"fun TreeRewriter(errorManager: ErrorManager)","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.TreeRewriter","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/-tree-rewriter.html","searchKeys":["TreeRewriter","fun TreeRewriter(errorManager: ErrorManager)","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.TreeRewriter"]},{"name":"fun TreeRewriter(scope: Stack<Int>, errorManager: ErrorManager)","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.TreeRewriter","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/-tree-rewriter.html","searchKeys":["TreeRewriter","fun TreeRewriter(scope: Stack<Int>, errorManager: ErrorManager)","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.TreeRewriter"]},{"name":"fun TrieEntry(value: Char, length: Int)","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.TrieEntry","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/-trie-entry.html","searchKeys":["TrieEntry","fun TrieEntry(value: Char, length: Int)","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.TrieEntry"]},{"name":"fun TypeChecker(expressions: List<Statement>, errorManager: ErrorManager)","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.TypeChecker","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/-type-checker.html","searchKeys":["TypeChecker","fun TypeChecker(expressions: List<Statement>, errorManager: ErrorManager)","com.martingoe.cubelang.frontend.semantic.TypeChecker.TypeChecker"]},{"name":"fun Unary(identifier: Token, expression: Expression)","description":"com.martingoe.cubelang.common.Expression.Unary.Unary","location":"-cubelang/com.martingoe.cubelang.common/-expression/-unary/-unary.html","searchKeys":["Unary","fun Unary(identifier: Token, expression: Expression)","com.martingoe.cubelang.common.Expression.Unary.Unary"]},{"name":"fun Utils()","description":"com.martingoe.cubelang.backend.Utils.Utils","location":"-cubelang/com.martingoe.cubelang.backend/-utils/-utils.html","searchKeys":["Utils","fun Utils()","com.martingoe.cubelang.backend.Utils.Utils"]},{"name":"fun ValueFromPointer()","description":"com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.ValueFromPointer","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-value-from-pointer/-value-from-pointer.html","searchKeys":["ValueFromPointer","fun ValueFromPointer()","com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.ValueFromPointer"]},{"name":"fun ValueFromPointer(expression: Expression, star: Token = Token(\"*\", TokenType.STAR))","description":"com.martingoe.cubelang.common.Expression.ValueFromPointer.ValueFromPointer","location":"-cubelang/com.martingoe.cubelang.common/-expression/-value-from-pointer/-value-from-pointer.html","searchKeys":["ValueFromPointer","fun ValueFromPointer(expression: Expression, star: Token = Token(\"*\", TokenType.STAR))","com.martingoe.cubelang.common.Expression.ValueFromPointer.ValueFromPointer"]},{"name":"fun VarCall(varName: Token)","description":"com.martingoe.cubelang.common.Expression.VarCall.VarCall","location":"-cubelang/com.martingoe.cubelang.common/-expression/-var-call/-var-call.html","searchKeys":["VarCall","fun VarCall(varName: Token)","com.martingoe.cubelang.common.Expression.VarCall.VarCall"]},{"name":"fun VarInitialization(name: Token, type: Type, valueExpression: Expression?)","description":"com.martingoe.cubelang.common.Statement.VarInitialization.VarInitialization","location":"-cubelang/com.martingoe.cubelang.common/-statement/-var-initialization/-var-initialization.html","searchKeys":["VarInitialization","fun VarInitialization(name: Token, type: Type, valueExpression: Expression?)","com.martingoe.cubelang.common.Statement.VarInitialization.VarInitialization"]},{"name":"fun VarNode(name: String, type: Type, offset: Int)","description":"com.martingoe.cubelang.common.VarNode.VarNode","location":"-cubelang/com.martingoe.cubelang.common/-var-node/-var-node.html","searchKeys":["VarNode","fun VarNode(name: String, type: Type, offset: Int)","com.martingoe.cubelang.common.VarNode.VarNode"]},{"name":"fun VirtualRegisterLiveInterval(virtualRegIndex: Int, start: Int, end: Int)","description":"com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.VirtualRegisterLiveInterval","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-virtual-register-live-interval/-virtual-register-live-interval.html","searchKeys":["VirtualRegisterLiveInterval","fun VirtualRegisterLiveInterval(virtualRegIndex: Int, start: Int, end: Int)","com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.VirtualRegisterLiveInterval"]},{"name":"fun WhileStmnt(condition: Expression, body: Statement)","description":"com.martingoe.cubelang.common.Statement.WhileStmnt.WhileStmnt","location":"-cubelang/com.martingoe.cubelang.common/-statement/-while-stmnt/-while-stmnt.html","searchKeys":["WhileStmnt","fun WhileStmnt(condition: Expression, body: Statement)","com.martingoe.cubelang.common.Statement.WhileStmnt.WhileStmnt"]},{"name":"fun addScopeAt(scope: Stack<Int>)","description":"com.martingoe.cubelang.common.FileSymbolTable.addScopeAt","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/add-scope-at.html","searchKeys":["addScopeAt","fun addScopeAt(scope: Stack<Int>)","com.martingoe.cubelang.common.FileSymbolTable.addScopeAt"]},{"name":"fun addStringLiteral(value: String)","description":"com.martingoe.cubelang.common.FileSymbolTable.addStringLiteral","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/add-string-literal.html","searchKeys":["addStringLiteral","fun addStringLiteral(value: String)","com.martingoe.cubelang.common.FileSymbolTable.addStringLiteral"]},{"name":"fun checkTypes()","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.checkTypes","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/check-types.html","searchKeys":["checkTypes","fun checkTypes()","com.martingoe.cubelang.frontend.semantic.TypeChecker.checkTypes"]},{"name":"fun compileFile(sourceFile: Array<String>)","description":"com.martingoe.cubelang.main.Main.compileFile","location":"-cubelang/com.martingoe.cubelang.main/-main/compile-file.html","searchKeys":["compileFile","fun compileFile(sourceFile: Array<String>)","com.martingoe.cubelang.main.Main.compileFile"]},{"name":"fun defineFileSymbolTables()","description":"com.martingoe.cubelang.common.definitions.StandardLibraryFunctions.Companion.defineFileSymbolTables","location":"-cubelang/com.martingoe.cubelang.common.definitions/-standard-library-functions/-companion/define-file-symbol-tables.html","searchKeys":["defineFileSymbolTables","fun defineFileSymbolTables()","com.martingoe.cubelang.common.definitions.StandardLibraryFunctions.Companion.defineFileSymbolTables"]},{"name":"fun defineVariable(scope: Stack<Int>, name: String, type: Type, offset: Int)","description":"com.martingoe.cubelang.common.FileSymbolTable.defineVariable","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/define-variable.html","searchKeys":["defineVariable","fun defineVariable(scope: Stack<Int>, name: String, type: Type, offset: Int)","com.martingoe.cubelang.common.FileSymbolTable.defineVariable"]},{"name":"fun emit(irValue: IRValue)","description":"com.martingoe.cubelang.common.ASMEmitter.emit","location":"-cubelang/com.martingoe.cubelang.common/-a-s-m-emitter/emit.html","searchKeys":["emit","fun emit(irValue: IRValue)","com.martingoe.cubelang.common.ASMEmitter.emit"]},{"name":"fun emit(string: String)","description":"com.martingoe.cubelang.common.ASMEmitter.emit","location":"-cubelang/com.martingoe.cubelang.common/-a-s-m-emitter/emit.html","searchKeys":["emit","fun emit(string: String)","com.martingoe.cubelang.common.ASMEmitter.emit"]},{"name":"fun emitASMForIR(emitter: ASMEmitter)","description":"com.martingoe.cubelang.backend.IRToASM.Companion.emitASMForIR","location":"-cubelang/com.martingoe.cubelang.backend/-i-r-to-a-s-m/-companion/emit-a-s-m-for-i-r.html","searchKeys":["emitASMForIR","fun emitASMForIR(emitter: ASMEmitter)","com.martingoe.cubelang.backend.IRToASM.Companion.emitASMForIR"]},{"name":"fun emitCodeForExpression(expression: Expression): Expression","description":"com.martingoe.cubelang.backend.instructionselection.ASTToIRService.emitCodeForExpression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-to-i-r-service/emit-code-for-expression.html","searchKeys":["emitCodeForExpression","fun emitCodeForExpression(expression: Expression): Expression","com.martingoe.cubelang.backend.instructionselection.ASTToIRService.emitCodeForExpression"]},{"name":"fun error(line: Int, index: Int, message: String)","description":"com.martingoe.cubelang.common.errors.ErrorManager.error","location":"-cubelang/com.martingoe.cubelang.common.errors/-error-manager/error.html","searchKeys":["error","fun error(line: Int, index: Int, message: String)","com.martingoe.cubelang.common.errors.ErrorManager.error"]},{"name":"fun error(token: Token, message: String)","description":"com.martingoe.cubelang.common.errors.ErrorManager.error","location":"-cubelang/com.martingoe.cubelang.common.errors/-error-manager/error.html","searchKeys":["error","fun error(token: Token, message: String)","com.martingoe.cubelang.common.errors.ErrorManager.error"]},{"name":"fun evaluate(expression: Expression): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.evaluate","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/evaluate.html","searchKeys":["evaluate","fun evaluate(expression: Expression): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.evaluate"]},{"name":"fun evaluateList(expressions: List<Statement>)","description":"com.martingoe.cubelang.backend.StatementCompiler.evaluateList","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/evaluate-list.html","searchKeys":["evaluateList","fun evaluateList(expressions: List<Statement>)","com.martingoe.cubelang.backend.StatementCompiler.evaluateList"]},{"name":"fun exitIfError()","description":"com.martingoe.cubelang.common.errors.ErrorManager.exitIfError","location":"-cubelang/com.martingoe.cubelang.common.errors/-error-manager/exit-if-error.html","searchKeys":["exitIfError","fun exitIfError()","com.martingoe.cubelang.common.errors.ErrorManager.exitIfError"]},{"name":"fun getChildren(expression: Expression): List<Expression>","description":"com.martingoe.cubelang.backend.Utils.Companion.getChildren","location":"-cubelang/com.martingoe.cubelang.backend/-utils/-companion/get-children.html","searchKeys":["getChildren","fun getChildren(expression: Expression): List<Expression>","com.martingoe.cubelang.backend.Utils.Companion.getChildren"]},{"name":"fun getCurrentSymbolTable(): FileSymbolTable","description":"com.martingoe.cubelang.common.SymbolTableSingleton.getCurrentSymbolTable","location":"-cubelang/com.martingoe.cubelang.common/-symbol-table-singleton/get-current-symbol-table.html","searchKeys":["getCurrentSymbolTable","fun getCurrentSymbolTable(): FileSymbolTable","com.martingoe.cubelang.common.SymbolTableSingleton.getCurrentSymbolTable"]},{"name":"fun getIntTypeForLength(length: Int): Type","description":"com.martingoe.cubelang.backend.Utils.Companion.getIntTypeForLength","location":"-cubelang/com.martingoe.cubelang.backend/-utils/-companion/get-int-type-for-length.html","searchKeys":["getIntTypeForLength","fun getIntTypeForLength(length: Int): Type","com.martingoe.cubelang.backend.Utils.Companion.getIntTypeForLength"]},{"name":"fun getLiteralValue(value: Any?): Int","description":"com.martingoe.cubelang.backend.instructionselection.getLiteralValue","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/get-literal-value.html","searchKeys":["getLiteralValue","fun getLiteralValue(value: Any?): Int","com.martingoe.cubelang.backend.instructionselection.getLiteralValue"]},{"name":"fun getReg(type: Type): Expression.Register","description":"com.martingoe.cubelang.backend.instructionselection.getReg","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/get-reg.html","searchKeys":["getReg","fun getReg(type: Type): Expression.Register","com.martingoe.cubelang.backend.instructionselection.getReg"]},{"name":"fun getRules(): Array<Rule>","description":"com.martingoe.cubelang.backend.instructionselection.getRules","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/get-rules.html","searchKeys":["getRules","fun getRules(): Array<Rule>","com.martingoe.cubelang.backend.instructionselection.getRules"]},{"name":"fun getStruct(name: String): Struct?","description":"com.martingoe.cubelang.common.FileSymbolTable.getStruct","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/get-struct.html","searchKeys":["getStruct","fun getStruct(name: String): Struct?","com.martingoe.cubelang.common.FileSymbolTable.getStruct"]},{"name":"fun getVariablesInCurrentScope(scope: Stack<Int>): List<VarNode>","description":"com.martingoe.cubelang.common.FileSymbolTable.getVariablesInCurrentScope","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/get-variables-in-current-scope.html","searchKeys":["getVariablesInCurrentScope","fun getVariablesInCurrentScope(scope: Stack<Int>): List<VarNode>","com.martingoe.cubelang.common.FileSymbolTable.getVariablesInCurrentScope"]},{"name":"fun getVariablesOffsetDefinedAtScope(scope: Stack<Int>): Int","description":"com.martingoe.cubelang.common.FileSymbolTable.getVariablesOffsetDefinedAtScope","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/get-variables-offset-defined-at-scope.html","searchKeys":["getVariablesOffsetDefinedAtScope","fun getVariablesOffsetDefinedAtScope(scope: Stack<Int>): Int","com.martingoe.cubelang.common.FileSymbolTable.getVariablesOffsetDefinedAtScope"]},{"name":"fun linearScanRegisterAllocation()","description":"com.martingoe.cubelang.backend.instructionselection.RegisterAllocation.linearScanRegisterAllocation","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-register-allocation/linear-scan-register-allocation.html","searchKeys":["linearScanRegisterAllocation","fun linearScanRegisterAllocation()","com.martingoe.cubelang.backend.instructionselection.RegisterAllocation.linearScanRegisterAllocation"]},{"name":"fun main(args: Array<String>)","description":"com.martingoe.cubelang.main.main","location":"-cubelang/com.martingoe.cubelang.main/main.html","searchKeys":["main","fun main(args: Array<String>)","com.martingoe.cubelang.main.main"]},{"name":"fun parse(): List<Statement>","description":"com.martingoe.cubelang.frontend.parser.Parser.parse","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parser/parse.html","searchKeys":["parse","fun parse(): List<Statement>","com.martingoe.cubelang.frontend.parser.Parser.parse"]},{"name":"fun resetAll()","description":"com.martingoe.cubelang.common.SymbolTableSingleton.resetAll","location":"-cubelang/com.martingoe.cubelang.common/-symbol-table-singleton/reset-all.html","searchKeys":["resetAll","fun resetAll()","com.martingoe.cubelang.common.SymbolTableSingleton.resetAll"]},{"name":"fun rewriteMultiple(expressions: List<Statement>)","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.rewriteMultiple","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/rewrite-multiple.html","searchKeys":["rewriteMultiple","fun rewriteMultiple(expressions: List<Statement>)","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.rewriteMultiple"]},{"name":"fun setNthChild(index: Int, newExpression: Expression, parent: Expression)","description":"com.martingoe.cubelang.backend.Utils.Companion.setNthChild","location":"-cubelang/com.martingoe.cubelang.backend/-utils/-companion/set-nth-child.html","searchKeys":["setNthChild","fun setNthChild(index: Int, newExpression: Expression, parent: Expression)","com.martingoe.cubelang.backend.Utils.Companion.setNthChild"]},{"name":"fun splitStruct(structLength: Int): List<Int>","description":"com.martingoe.cubelang.backend.Utils.Companion.splitStruct","location":"-cubelang/com.martingoe.cubelang.backend/-utils/-companion/split-struct.html","searchKeys":["splitStruct","fun splitStruct(structLength: Int): List<Int>","com.martingoe.cubelang.backend.Utils.Companion.splitStruct"]},{"name":"interface ExpressionVisitor<T>","description":"com.martingoe.cubelang.common.Expression.ExpressionVisitor","location":"-cubelang/com.martingoe.cubelang.common/-expression/-expression-visitor/index.html","searchKeys":["ExpressionVisitor","interface ExpressionVisitor<T>","com.martingoe.cubelang.common.Expression.ExpressionVisitor"]},{"name":"interface StatementVisitor<R>","description":"com.martingoe.cubelang.common.Statement.StatementVisitor","location":"-cubelang/com.martingoe.cubelang.common/-statement/-statement-visitor/index.html","searchKeys":["StatementVisitor","interface StatementVisitor<R>","com.martingoe.cubelang.common.Statement.StatementVisitor"]},{"name":"interface Type","description":"com.martingoe.cubelang.common.Type","location":"-cubelang/com.martingoe.cubelang.common/-type/index.html","searchKeys":["Type","interface Type","com.martingoe.cubelang.common.Type"]},{"name":"interface ValueType","description":"com.martingoe.cubelang.common.ir.ValueType","location":"-cubelang/com.martingoe.cubelang.common.ir/-value-type/index.html","searchKeys":["ValueType","interface ValueType","com.martingoe.cubelang.common.ir.ValueType"]},{"name":"lateinit var currentIndex: String","description":"com.martingoe.cubelang.common.SymbolTableSingleton.currentIndex","location":"-cubelang/com.martingoe.cubelang.common/-symbol-table-singleton/current-index.html","searchKeys":["currentIndex","lateinit var currentIndex: String","com.martingoe.cubelang.common.SymbolTableSingleton.currentIndex"]},{"name":"object Companion","description":"com.martingoe.cubelang.backend.IRToASM.Companion","location":"-cubelang/com.martingoe.cubelang.backend/-i-r-to-a-s-m/-companion/index.html","searchKeys":["Companion","object Companion","com.martingoe.cubelang.backend.IRToASM.Companion"]},{"name":"object Companion","description":"com.martingoe.cubelang.backend.Utils.Companion","location":"-cubelang/com.martingoe.cubelang.backend/-utils/-companion/index.html","searchKeys":["Companion","object Companion","com.martingoe.cubelang.backend.Utils.Companion"]},{"name":"object Companion","description":"com.martingoe.cubelang.backend.instructionselection.Rule.Companion","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-rule/-companion/index.html","searchKeys":["Companion","object Companion","com.martingoe.cubelang.backend.instructionselection.Rule.Companion"]},{"name":"object Companion","description":"com.martingoe.cubelang.common.ConsoleColor.Companion","location":"-cubelang/com.martingoe.cubelang.common/-console-color/-companion/index.html","searchKeys":["Companion","object Companion","com.martingoe.cubelang.common.ConsoleColor.Companion"]},{"name":"object Companion","description":"com.martingoe.cubelang.common.RegisterConfig.Companion","location":"-cubelang/com.martingoe.cubelang.common/-register-config/-companion/index.html","searchKeys":["Companion","object Companion","com.martingoe.cubelang.common.RegisterConfig.Companion"]},{"name":"object Companion","description":"com.martingoe.cubelang.common.definitions.StandardLibraryFunctions.Companion","location":"-cubelang/com.martingoe.cubelang.common.definitions/-standard-library-functions/-companion/index.html","searchKeys":["Companion","object Companion","com.martingoe.cubelang.common.definitions.StandardLibraryFunctions.Companion"]},{"name":"object SymbolTableSingleton","description":"com.martingoe.cubelang.common.SymbolTableSingleton","location":"-cubelang/com.martingoe.cubelang.common/-symbol-table-singleton/index.html","searchKeys":["SymbolTableSingleton","object SymbolTableSingleton","com.martingoe.cubelang.common.SymbolTableSingleton"]},{"name":"open class Node","description":"com.martingoe.cubelang.common.Node","location":"-cubelang/com.martingoe.cubelang.common/-node/index.html","searchKeys":["Node","open class Node","com.martingoe.cubelang.common.Node"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.equals","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.ArrayType.equals","location":"-cubelang/com.martingoe.cubelang.common/-array-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.ArrayType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.NoneType.equals","location":"-cubelang/com.martingoe.cubelang.common/-none-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.NoneType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.NormalType.equals","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.NormalType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.PointerType.equals","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.PointerType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.StructType.equals","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.StructType.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.ir.FramePointer.equals","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.ir.FramePointer.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.equals","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.ir.FramePointerOffset.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.ir.FunctionLabel.equals","location":"-cubelang/com.martingoe.cubelang.common.ir/-function-label/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.ir.FunctionLabel.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.ir.RegOffset.equals","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.ir.RegOffset.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.ir.TemporaryRegister.equals","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.ir.TemporaryRegister.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.martingoe.cubelang.common.tokens.Token.equals","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.martingoe.cubelang.common.tokens.Token.equals"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.ArrayGet.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-array-get/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.ArrayGet.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Assignment.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-assignment/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Assignment.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Call.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-call/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Call.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Comparison.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-comparison/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Comparison.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.ExtendTo64Bit.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-extend-to64-bit/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.ExtendTo64Bit.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.FramePointer.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-frame-pointer/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.FramePointer.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Grouping.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-grouping/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Grouping.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.InstanceGet.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-instance-get/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.InstanceGet.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Literal.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-literal/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Literal.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Logical.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-logical/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Logical.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Operation.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-operation/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Operation.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.PointerGet.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-pointer-get/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.PointerGet.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Register.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-register/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Register.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.StringLiteral.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-string-literal/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.StringLiteral.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.Unary.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-unary/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.Unary.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.ValueFromPointer.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-value-from-pointer/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.ValueFromPointer.accept"]},{"name":"open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","description":"com.martingoe.cubelang.common.Expression.VarCall.accept","location":"-cubelang/com.martingoe.cubelang.common/-expression/-var-call/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Expression.ExpressionVisitor<R>): R","com.martingoe.cubelang.common.Expression.VarCall.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.ArgumentDefinition.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-argument-definition/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.ArgumentDefinition.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.BlockStatement.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-block-statement/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.BlockStatement.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.Empty.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-empty/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.Empty.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.ExpressionStatement.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-expression-statement/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.ExpressionStatement.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-extern-function-definition/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.ForStmnt.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-for-stmnt/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.ForStmnt.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.FunctionDefinition.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.IfStmnt.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-if-stmnt/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.IfStmnt.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.ImportStmnt.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-import-stmnt/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.ImportStmnt.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.ReturnStmnt.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-return-stmnt/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.ReturnStmnt.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.StructDefinition.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-struct-definition/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.StructDefinition.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.VarInitialization.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-var-initialization/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.VarInitialization.accept"]},{"name":"open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","description":"com.martingoe.cubelang.common.Statement.WhileStmnt.accept","location":"-cubelang/com.martingoe.cubelang.common/-statement/-while-stmnt/accept.html","searchKeys":["accept","open override fun <R> accept(visitor: Statement.StatementVisitor<R>): R","com.martingoe.cubelang.common.Statement.WhileStmnt.accept"]},{"name":"open override fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.acceptExtendTo64Bits","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/accept-extend-to64-bits.html","searchKeys":["acceptExtendTo64Bits","open override fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.acceptExtendTo64Bits"]},{"name":"open override fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.acceptExtendTo64Bits","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/accept-extend-to64-bits.html","searchKeys":["acceptExtendTo64Bits","open override fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.acceptExtendTo64Bits"]},{"name":"open override fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.acceptExtendTo64Bits","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/accept-extend-to64-bits.html","searchKeys":["acceptExtendTo64Bits","open override fun acceptExtendTo64Bits(extendTo64Bit: Expression.ExtendTo64Bit): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.acceptExtendTo64Bits"]},{"name":"open override fun acceptFramePointer(framePointer: Expression.FramePointer): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.acceptFramePointer","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/accept-frame-pointer.html","searchKeys":["acceptFramePointer","open override fun acceptFramePointer(framePointer: Expression.FramePointer): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.acceptFramePointer"]},{"name":"open override fun acceptFramePointer(framePointer: Expression.FramePointer): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.acceptFramePointer","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/accept-frame-pointer.html","searchKeys":["acceptFramePointer","open override fun acceptFramePointer(framePointer: Expression.FramePointer): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.acceptFramePointer"]},{"name":"open override fun acceptFramePointer(framePointer: Expression.FramePointer): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.acceptFramePointer","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/accept-frame-pointer.html","searchKeys":["acceptFramePointer","open override fun acceptFramePointer(framePointer: Expression.FramePointer): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.acceptFramePointer"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.CallRule.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-call-rule/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.CallRule.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-comparison-reg-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-div-operation-reg-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-extend-to64-bits-rule/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.FramePointerRule.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-frame-pointer-rule/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.FramePointerRule.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.LiteralToReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-literal-to-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.LiteralToReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-f-p-offset/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset-with-adder/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-offset/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-value-from-pointer-offset/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-pointer-reg-to-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovRegToReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-reg-to-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MovRegToReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-lit-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-lit/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.NegateRule.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-negate-rule/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.NegateRule.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-lit-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-lit/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.PointerGet.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-pointer-get/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.PointerGet.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.StringLiteral.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-string-literal/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.StringLiteral.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-lit/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-reg/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.constructString"]},{"name":"open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","description":"com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.constructString","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-value-from-pointer/construct-string.html","searchKeys":["constructString","open override fun constructString(expression: Expression, emitter: ASMEmitter, astToIRService: ASTToIRService): Expression","com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.constructString"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.CallRule.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-call-rule/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.CallRule.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-comparison-reg-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-div-operation-reg-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-extend-to64-bits-rule/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.FramePointerRule.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-frame-pointer-rule/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.FramePointerRule.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.LiteralToReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-literal-to-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.LiteralToReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-f-p-offset/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset-with-adder/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-offset/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-value-from-pointer-offset/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-pointer-reg-to-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MovRegToReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-reg-to-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MovRegToReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-lit-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-lit/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.NegateRule.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-negate-rule/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.NegateRule.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-lit-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-lit/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.PointerGet.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-pointer-get/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.PointerGet.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.StringLiteral.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-string-literal/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.StringLiteral.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-lit/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-reg/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.getCost"]},{"name":"open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","description":"com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.getCost","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-value-from-pointer/get-cost.html","searchKeys":["getCost","open override fun getCost(expression: Expression, astGetSymbol: ASTGetSymbol, rules: Array<Rule>): Int","com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.getCost"]},{"name":"open override fun getLength(): Int","description":"com.martingoe.cubelang.common.ArrayType.getLength","location":"-cubelang/com.martingoe.cubelang.common/-array-type/get-length.html","searchKeys":["getLength","open override fun getLength(): Int","com.martingoe.cubelang.common.ArrayType.getLength"]},{"name":"open override fun getLength(): Int","description":"com.martingoe.cubelang.common.NoneType.getLength","location":"-cubelang/com.martingoe.cubelang.common/-none-type/get-length.html","searchKeys":["getLength","open override fun getLength(): Int","com.martingoe.cubelang.common.NoneType.getLength"]},{"name":"open override fun getLength(): Int","description":"com.martingoe.cubelang.common.NormalType.getLength","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/get-length.html","searchKeys":["getLength","open override fun getLength(): Int","com.martingoe.cubelang.common.NormalType.getLength"]},{"name":"open override fun getLength(): Int","description":"com.martingoe.cubelang.common.PointerType.getLength","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/get-length.html","searchKeys":["getLength","open override fun getLength(): Int","com.martingoe.cubelang.common.PointerType.getLength"]},{"name":"open override fun getLength(): Int","description":"com.martingoe.cubelang.common.StructType.getLength","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/get-length.html","searchKeys":["getLength","open override fun getLength(): Int","com.martingoe.cubelang.common.StructType.getLength"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.hashCode","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.ArrayType.hashCode","location":"-cubelang/com.martingoe.cubelang.common/-array-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.ArrayType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.NoneType.hashCode","location":"-cubelang/com.martingoe.cubelang.common/-none-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.NoneType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.NormalType.hashCode","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.NormalType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.PointerType.hashCode","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.PointerType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.StructType.hashCode","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.StructType.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.ir.FramePointer.hashCode","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.ir.FramePointer.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.hashCode","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.ir.FramePointerOffset.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.ir.FunctionLabel.hashCode","location":"-cubelang/com.martingoe.cubelang.common.ir/-function-label/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.ir.FunctionLabel.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.ir.RegOffset.hashCode","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.ir.RegOffset.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.ir.TemporaryRegister.hashCode","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.ir.TemporaryRegister.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.martingoe.cubelang.common.tokens.Token.hashCode","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.martingoe.cubelang.common.tokens.Token.hashCode"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ArrayType.toString","location":"-cubelang/com.martingoe.cubelang.common/-array-type/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ArrayType.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.Expression.FramePointer.toString","location":"-cubelang/com.martingoe.cubelang.common/-expression/-frame-pointer/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.Expression.FramePointer.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.Expression.Literal.toString","location":"-cubelang/com.martingoe.cubelang.common/-expression/-literal/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.Expression.Literal.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.Expression.Register.toString","location":"-cubelang/com.martingoe.cubelang.common/-expression/-register/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.Expression.Register.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.NoneType.toString","location":"-cubelang/com.martingoe.cubelang.common/-none-type/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.NoneType.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.NormalType.toString","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.NormalType.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.PointerType.toString","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.PointerType.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.StructType.toString","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.StructType.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.FramePointer.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.FramePointer.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.FramePointerOffset.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.FunctionLabel.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-function-label/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.FunctionLabel.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.IRLiteral.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-literal/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.IRLiteral.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.IRValue.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.IRValue.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.RegOffset.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.RegOffset.toString"]},{"name":"open override fun toString(): String","description":"com.martingoe.cubelang.common.ir.TemporaryRegister.toString","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/to-string.html","searchKeys":["toString","open override fun toString(): String","com.martingoe.cubelang.common.ir.TemporaryRegister.toString"]},{"name":"open override fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): Any?","description":"com.martingoe.cubelang.backend.StatementCompiler.visitArgumentDefinition","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-argument-definition.html","searchKeys":["visitArgumentDefinition","open override fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): Any?","com.martingoe.cubelang.backend.StatementCompiler.visitArgumentDefinition"]},{"name":"open override fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitArgumentDefinition","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-argument-definition.html","searchKeys":["visitArgumentDefinition","open override fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitArgumentDefinition"]},{"name":"open override fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitArgumentDefinition","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-argument-definition.html","searchKeys":["visitArgumentDefinition","open override fun visitArgumentDefinition(argumentDefinition: Statement.ArgumentDefinition): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitArgumentDefinition"]},{"name":"open override fun visitArrayGet(arrayGet: Expression.ArrayGet): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitArrayGet","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-array-get.html","searchKeys":["visitArrayGet","open override fun visitArrayGet(arrayGet: Expression.ArrayGet): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitArrayGet"]},{"name":"open override fun visitArrayGet(arrayGet: Expression.ArrayGet): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitArrayGet","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-array-get.html","searchKeys":["visitArrayGet","open override fun visitArrayGet(arrayGet: Expression.ArrayGet): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitArrayGet"]},{"name":"open override fun visitArrayGet(arrayGet: Expression.ArrayGet): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitArrayGet","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-array-get.html","searchKeys":["visitArrayGet","open override fun visitArrayGet(arrayGet: Expression.ArrayGet): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitArrayGet"]},{"name":"open override fun visitAssignment(assignment: Expression.Assignment): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitAssignment","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-assignment.html","searchKeys":["visitAssignment","open override fun visitAssignment(assignment: Expression.Assignment): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitAssignment"]},{"name":"open override fun visitAssignment(assignment: Expression.Assignment): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitAssignment","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-assignment.html","searchKeys":["visitAssignment","open override fun visitAssignment(assignment: Expression.Assignment): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitAssignment"]},{"name":"open override fun visitAssignment(assignment: Expression.Assignment): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitAssignment","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-assignment.html","searchKeys":["visitAssignment","open override fun visitAssignment(assignment: Expression.Assignment): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitAssignment"]},{"name":"open override fun visitBlockStatement(blockStatement: Statement.BlockStatement)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitBlockStatement","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-block-statement.html","searchKeys":["visitBlockStatement","open override fun visitBlockStatement(blockStatement: Statement.BlockStatement)","com.martingoe.cubelang.backend.StatementCompiler.visitBlockStatement"]},{"name":"open override fun visitBlockStatement(blockStatement: Statement.BlockStatement): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitBlockStatement","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-block-statement.html","searchKeys":["visitBlockStatement","open override fun visitBlockStatement(blockStatement: Statement.BlockStatement): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitBlockStatement"]},{"name":"open override fun visitBlockStatement(blockStatement: Statement.BlockStatement): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitBlockStatement","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-block-statement.html","searchKeys":["visitBlockStatement","open override fun visitBlockStatement(blockStatement: Statement.BlockStatement): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitBlockStatement"]},{"name":"open override fun visitCall(call: Expression.Call): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitCall","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-call.html","searchKeys":["visitCall","open override fun visitCall(call: Expression.Call): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitCall"]},{"name":"open override fun visitCall(call: Expression.Call): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitCall","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-call.html","searchKeys":["visitCall","open override fun visitCall(call: Expression.Call): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitCall"]},{"name":"open override fun visitCall(call: Expression.Call): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitCall","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-call.html","searchKeys":["visitCall","open override fun visitCall(call: Expression.Call): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitCall"]},{"name":"open override fun visitComparison(comparison: Expression.Comparison): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitComparison","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-comparison.html","searchKeys":["visitComparison","open override fun visitComparison(comparison: Expression.Comparison): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitComparison"]},{"name":"open override fun visitComparison(comparison: Expression.Comparison): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitComparison","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-comparison.html","searchKeys":["visitComparison","open override fun visitComparison(comparison: Expression.Comparison): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitComparison"]},{"name":"open override fun visitComparison(comparison: Expression.Comparison): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitComparison","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-comparison.html","searchKeys":["visitComparison","open override fun visitComparison(comparison: Expression.Comparison): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitComparison"]},{"name":"open override fun visitEmpty(empty: Statement.Empty)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitEmpty","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-empty.html","searchKeys":["visitEmpty","open override fun visitEmpty(empty: Statement.Empty)","com.martingoe.cubelang.backend.StatementCompiler.visitEmpty"]},{"name":"open override fun visitEmpty(empty: Statement.Empty): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitEmpty","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-empty.html","searchKeys":["visitEmpty","open override fun visitEmpty(empty: Statement.Empty): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitEmpty"]},{"name":"open override fun visitEmpty(empty: Statement.Empty): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitEmpty","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-empty.html","searchKeys":["visitEmpty","open override fun visitEmpty(empty: Statement.Empty): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitEmpty"]},{"name":"open override fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitExpressionStatement","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-expression-statement.html","searchKeys":["visitExpressionStatement","open override fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement)","com.martingoe.cubelang.backend.StatementCompiler.visitExpressionStatement"]},{"name":"open override fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitExpressionStatement","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-expression-statement.html","searchKeys":["visitExpressionStatement","open override fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitExpressionStatement"]},{"name":"open override fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitExpressionStatement","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-expression-statement.html","searchKeys":["visitExpressionStatement","open override fun visitExpressionStatement(expressionStatement: Statement.ExpressionStatement): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitExpressionStatement"]},{"name":"open override fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitExternFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-extern-function-definition.html","searchKeys":["visitExternFunctionDefinition","open override fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition)","com.martingoe.cubelang.backend.StatementCompiler.visitExternFunctionDefinition"]},{"name":"open override fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitExternFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-extern-function-definition.html","searchKeys":["visitExternFunctionDefinition","open override fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitExternFunctionDefinition"]},{"name":"open override fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitExternFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-extern-function-definition.html","searchKeys":["visitExternFunctionDefinition","open override fun visitExternFunctionDefinition(externFunctionDefinition: Statement.ExternFunctionDefinition): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitExternFunctionDefinition"]},{"name":"open override fun visitForStmnt(forStmnt: Statement.ForStmnt)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitForStmnt","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-for-stmnt.html","searchKeys":["visitForStmnt","open override fun visitForStmnt(forStmnt: Statement.ForStmnt)","com.martingoe.cubelang.backend.StatementCompiler.visitForStmnt"]},{"name":"open override fun visitForStmnt(forStmnt: Statement.ForStmnt): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitForStmnt","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-for-stmnt.html","searchKeys":["visitForStmnt","open override fun visitForStmnt(forStmnt: Statement.ForStmnt): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitForStmnt"]},{"name":"open override fun visitForStmnt(forStmnt: Statement.ForStmnt): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitForStmnt","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-for-stmnt.html","searchKeys":["visitForStmnt","open override fun visitForStmnt(forStmnt: Statement.ForStmnt): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitForStmnt"]},{"name":"open override fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-function-definition.html","searchKeys":["visitFunctionDefinition","open override fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition)","com.martingoe.cubelang.backend.StatementCompiler.visitFunctionDefinition"]},{"name":"open override fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-function-definition.html","searchKeys":["visitFunctionDefinition","open override fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitFunctionDefinition"]},{"name":"open override fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitFunctionDefinition","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-function-definition.html","searchKeys":["visitFunctionDefinition","open override fun visitFunctionDefinition(functionDefinition: Statement.FunctionDefinition): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitFunctionDefinition"]},{"name":"open override fun visitGrouping(grouping: Expression.Grouping): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitGrouping","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-grouping.html","searchKeys":["visitGrouping","open override fun visitGrouping(grouping: Expression.Grouping): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitGrouping"]},{"name":"open override fun visitGrouping(grouping: Expression.Grouping): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitGrouping","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-grouping.html","searchKeys":["visitGrouping","open override fun visitGrouping(grouping: Expression.Grouping): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitGrouping"]},{"name":"open override fun visitGrouping(grouping: Expression.Grouping): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitGrouping","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-grouping.html","searchKeys":["visitGrouping","open override fun visitGrouping(grouping: Expression.Grouping): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitGrouping"]},{"name":"open override fun visitIfStmnt(ifStmnt: Statement.IfStmnt)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitIfStmnt","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-if-stmnt.html","searchKeys":["visitIfStmnt","open override fun visitIfStmnt(ifStmnt: Statement.IfStmnt)","com.martingoe.cubelang.backend.StatementCompiler.visitIfStmnt"]},{"name":"open override fun visitIfStmnt(ifStmnt: Statement.IfStmnt): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitIfStmnt","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-if-stmnt.html","searchKeys":["visitIfStmnt","open override fun visitIfStmnt(ifStmnt: Statement.IfStmnt): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitIfStmnt"]},{"name":"open override fun visitIfStmnt(ifStmnt: Statement.IfStmnt): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitIfStmnt","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-if-stmnt.html","searchKeys":["visitIfStmnt","open override fun visitIfStmnt(ifStmnt: Statement.IfStmnt): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitIfStmnt"]},{"name":"open override fun visitImportStmnt(importStmnt: Statement.ImportStmnt)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitImportStmnt","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-import-stmnt.html","searchKeys":["visitImportStmnt","open override fun visitImportStmnt(importStmnt: Statement.ImportStmnt)","com.martingoe.cubelang.backend.StatementCompiler.visitImportStmnt"]},{"name":"open override fun visitImportStmnt(importStmnt: Statement.ImportStmnt): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitImportStmnt","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-import-stmnt.html","searchKeys":["visitImportStmnt","open override fun visitImportStmnt(importStmnt: Statement.ImportStmnt): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitImportStmnt"]},{"name":"open override fun visitImportStmnt(importStmnt: Statement.ImportStmnt): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitImportStmnt","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-import-stmnt.html","searchKeys":["visitImportStmnt","open override fun visitImportStmnt(importStmnt: Statement.ImportStmnt): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitImportStmnt"]},{"name":"open override fun visitInstanceGet(instanceGet: Expression.InstanceGet): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitInstanceGet","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-instance-get.html","searchKeys":["visitInstanceGet","open override fun visitInstanceGet(instanceGet: Expression.InstanceGet): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitInstanceGet"]},{"name":"open override fun visitInstanceGet(instanceGet: Expression.InstanceGet): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitInstanceGet","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-instance-get.html","searchKeys":["visitInstanceGet","open override fun visitInstanceGet(instanceGet: Expression.InstanceGet): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitInstanceGet"]},{"name":"open override fun visitInstanceGet(instanceGet: Expression.InstanceGet): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitInstanceGet","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-instance-get.html","searchKeys":["visitInstanceGet","open override fun visitInstanceGet(instanceGet: Expression.InstanceGet): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitInstanceGet"]},{"name":"open override fun visitLiteral(literal: Expression.Literal): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitLiteral","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-literal.html","searchKeys":["visitLiteral","open override fun visitLiteral(literal: Expression.Literal): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitLiteral"]},{"name":"open override fun visitLiteral(literal: Expression.Literal): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitLiteral","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-literal.html","searchKeys":["visitLiteral","open override fun visitLiteral(literal: Expression.Literal): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitLiteral"]},{"name":"open override fun visitLiteral(literal: Expression.Literal): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitLiteral","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-literal.html","searchKeys":["visitLiteral","open override fun visitLiteral(literal: Expression.Literal): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitLiteral"]},{"name":"open override fun visitLogical(logical: Expression.Logical): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitLogical","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-logical.html","searchKeys":["visitLogical","open override fun visitLogical(logical: Expression.Logical): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitLogical"]},{"name":"open override fun visitLogical(logical: Expression.Logical): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitLogical","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-logical.html","searchKeys":["visitLogical","open override fun visitLogical(logical: Expression.Logical): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitLogical"]},{"name":"open override fun visitLogical(logical: Expression.Logical): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitLogical","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-logical.html","searchKeys":["visitLogical","open override fun visitLogical(logical: Expression.Logical): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitLogical"]},{"name":"open override fun visitOperation(operation: Expression.Operation): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitOperation","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-operation.html","searchKeys":["visitOperation","open override fun visitOperation(operation: Expression.Operation): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitOperation"]},{"name":"open override fun visitOperation(operation: Expression.Operation): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitOperation","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-operation.html","searchKeys":["visitOperation","open override fun visitOperation(operation: Expression.Operation): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitOperation"]},{"name":"open override fun visitOperation(operation: Expression.Operation): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitOperation","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-operation.html","searchKeys":["visitOperation","open override fun visitOperation(operation: Expression.Operation): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitOperation"]},{"name":"open override fun visitPointerGet(pointerGet: Expression.PointerGet): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitPointerGet","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-pointer-get.html","searchKeys":["visitPointerGet","open override fun visitPointerGet(pointerGet: Expression.PointerGet): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitPointerGet"]},{"name":"open override fun visitPointerGet(pointerGet: Expression.PointerGet): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitPointerGet","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-pointer-get.html","searchKeys":["visitPointerGet","open override fun visitPointerGet(pointerGet: Expression.PointerGet): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitPointerGet"]},{"name":"open override fun visitPointerGet(pointerGet: Expression.PointerGet): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitPointerGet","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-pointer-get.html","searchKeys":["visitPointerGet","open override fun visitPointerGet(pointerGet: Expression.PointerGet): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitPointerGet"]},{"name":"open override fun visitRegister(register: Expression.Register): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitRegister","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-register.html","searchKeys":["visitRegister","open override fun visitRegister(register: Expression.Register): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitRegister"]},{"name":"open override fun visitRegister(register: Expression.Register): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitRegister","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-register.html","searchKeys":["visitRegister","open override fun visitRegister(register: Expression.Register): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitRegister"]},{"name":"open override fun visitRegister(register: Expression.Register): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitRegister","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-register.html","searchKeys":["visitRegister","open override fun visitRegister(register: Expression.Register): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitRegister"]},{"name":"open override fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitReturnStmnt","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-return-stmnt.html","searchKeys":["visitReturnStmnt","open override fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt)","com.martingoe.cubelang.backend.StatementCompiler.visitReturnStmnt"]},{"name":"open override fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitReturnStmnt","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-return-stmnt.html","searchKeys":["visitReturnStmnt","open override fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitReturnStmnt"]},{"name":"open override fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitReturnStmnt","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-return-stmnt.html","searchKeys":["visitReturnStmnt","open override fun visitReturnStmnt(returnStmnt: Statement.ReturnStmnt): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitReturnStmnt"]},{"name":"open override fun visitStringLiteral(stringLiteral: Expression.StringLiteral): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitStringLiteral","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-string-literal.html","searchKeys":["visitStringLiteral","open override fun visitStringLiteral(stringLiteral: Expression.StringLiteral): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitStringLiteral"]},{"name":"open override fun visitStringLiteral(stringLiteral: Expression.StringLiteral): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitStringLiteral","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-string-literal.html","searchKeys":["visitStringLiteral","open override fun visitStringLiteral(stringLiteral: Expression.StringLiteral): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitStringLiteral"]},{"name":"open override fun visitStringLiteral(stringLiteral: Expression.StringLiteral): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitStringLiteral","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-string-literal.html","searchKeys":["visitStringLiteral","open override fun visitStringLiteral(stringLiteral: Expression.StringLiteral): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitStringLiteral"]},{"name":"open override fun visitStructDefinition(structDefinition: Statement.StructDefinition)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitStructDefinition","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-struct-definition.html","searchKeys":["visitStructDefinition","open override fun visitStructDefinition(structDefinition: Statement.StructDefinition)","com.martingoe.cubelang.backend.StatementCompiler.visitStructDefinition"]},{"name":"open override fun visitStructDefinition(structDefinition: Statement.StructDefinition): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitStructDefinition","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-struct-definition.html","searchKeys":["visitStructDefinition","open override fun visitStructDefinition(structDefinition: Statement.StructDefinition): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitStructDefinition"]},{"name":"open override fun visitStructDefinition(structDefinition: Statement.StructDefinition): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitStructDefinition","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-struct-definition.html","searchKeys":["visitStructDefinition","open override fun visitStructDefinition(structDefinition: Statement.StructDefinition): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitStructDefinition"]},{"name":"open override fun visitUnary(unary: Expression.Unary): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitUnary","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-unary.html","searchKeys":["visitUnary","open override fun visitUnary(unary: Expression.Unary): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitUnary"]},{"name":"open override fun visitUnary(unary: Expression.Unary): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitUnary","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-unary.html","searchKeys":["visitUnary","open override fun visitUnary(unary: Expression.Unary): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitUnary"]},{"name":"open override fun visitUnary(unary: Expression.Unary): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitUnary","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-unary.html","searchKeys":["visitUnary","open override fun visitUnary(unary: Expression.Unary): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitUnary"]},{"name":"open override fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitValueFromPointer","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-value-from-pointer.html","searchKeys":["visitValueFromPointer","open override fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitValueFromPointer"]},{"name":"open override fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitValueFromPointer","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-value-from-pointer.html","searchKeys":["visitValueFromPointer","open override fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitValueFromPointer"]},{"name":"open override fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitValueFromPointer","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-value-from-pointer.html","searchKeys":["visitValueFromPointer","open override fun visitValueFromPointer(valueFromPointer: Expression.ValueFromPointer): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitValueFromPointer"]},{"name":"open override fun visitVarCall(varCall: Expression.VarCall): Char","description":"com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitVarCall","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-get-symbol/visit-var-call.html","searchKeys":["visitVarCall","open override fun visitVarCall(varCall: Expression.VarCall): Char","com.martingoe.cubelang.backend.instructionselection.ASTGetSymbol.visitVarCall"]},{"name":"open override fun visitVarCall(varCall: Expression.VarCall): Expression","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitVarCall","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-var-call.html","searchKeys":["visitVarCall","open override fun visitVarCall(varCall: Expression.VarCall): Expression","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitVarCall"]},{"name":"open override fun visitVarCall(varCall: Expression.VarCall): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitVarCall","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-var-call.html","searchKeys":["visitVarCall","open override fun visitVarCall(varCall: Expression.VarCall): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitVarCall"]},{"name":"open override fun visitVarInitialization(varInitialization: Statement.VarInitialization)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitVarInitialization","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-var-initialization.html","searchKeys":["visitVarInitialization","open override fun visitVarInitialization(varInitialization: Statement.VarInitialization)","com.martingoe.cubelang.backend.StatementCompiler.visitVarInitialization"]},{"name":"open override fun visitVarInitialization(varInitialization: Statement.VarInitialization): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitVarInitialization","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-var-initialization.html","searchKeys":["visitVarInitialization","open override fun visitVarInitialization(varInitialization: Statement.VarInitialization): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitVarInitialization"]},{"name":"open override fun visitVarInitialization(varInitialization: Statement.VarInitialization): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitVarInitialization","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-var-initialization.html","searchKeys":["visitVarInitialization","open override fun visitVarInitialization(varInitialization: Statement.VarInitialization): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitVarInitialization"]},{"name":"open override fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt)","description":"com.martingoe.cubelang.backend.StatementCompiler.visitWhileStmnt","location":"-cubelang/com.martingoe.cubelang.backend/-statement-compiler/visit-while-stmnt.html","searchKeys":["visitWhileStmnt","open override fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt)","com.martingoe.cubelang.backend.StatementCompiler.visitWhileStmnt"]},{"name":"open override fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt): Statement","description":"com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitWhileStmnt","location":"-cubelang/com.martingoe.cubelang.middleend.treemodification/-tree-rewriter/visit-while-stmnt.html","searchKeys":["visitWhileStmnt","open override fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt): Statement","com.martingoe.cubelang.middleend.treemodification.TreeRewriter.visitWhileStmnt"]},{"name":"open override fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt): Type","description":"com.martingoe.cubelang.frontend.semantic.TypeChecker.visitWhileStmnt","location":"-cubelang/com.martingoe.cubelang.frontend.semantic/-type-checker/visit-while-stmnt.html","searchKeys":["visitWhileStmnt","open override fun visitWhileStmnt(whileStmnt: Statement.WhileStmnt): Type","com.martingoe.cubelang.frontend.semantic.TypeChecker.visitWhileStmnt"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.CallRule.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-call-rule/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.CallRule.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-comparison-reg-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-div-operation-reg-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-extend-to64-bits-rule/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.FramePointerRule.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-frame-pointer-rule/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.FramePointerRule.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.LiteralToReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-literal-to-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.LiteralToReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-f-p-offset/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset-with-adder/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-offset/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-value-from-pointer-offset/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-pointer-reg-to-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MovRegToReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-reg-to-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MovRegToReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-lit-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-lit/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.NegateRule.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-negate-rule/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.NegateRule.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-lit-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-lit/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.PointerGet.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-pointer-get/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.PointerGet.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-lit/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-reg/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.expression"]},{"name":"open override val expression: Expression","description":"com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-value-from-pointer/expression.html","searchKeys":["expression","open override val expression: Expression","com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.expression"]},{"name":"open override val expression: Expression.StringLiteral","description":"com.martingoe.cubelang.backend.instructionselection.StringLiteral.expression","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-string-literal/expression.html","searchKeys":["expression","open override val expression: Expression.StringLiteral","com.martingoe.cubelang.backend.instructionselection.StringLiteral.expression"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.CallRule.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-call-rule/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.CallRule.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-comparison-reg-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.ComparisonRegReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-div-operation-reg-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.DivOperationRegReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-extend-to64-bits-rule/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.ExtendTo64BitsRule.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.FramePointerRule.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-frame-pointer-rule/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.FramePointerRule.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.LiteralToReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-literal-to-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.LiteralToReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-f-p-offset/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovFromFPOffset.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffset.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-from-reg-offset-with-adder/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovFromRegOffsetWithAdder.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-offset/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovOffsetToOffset.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovOffsetToReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-offset-to-value-from-pointer-offset/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovOffsetToValueFromPointerOffset.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-pointer-reg-to-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovPointerRegToReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MovRegToReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mov-reg-to-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MovRegToReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-lit-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MulOperationLitReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-lit/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MulOperationRegLit.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-mul-operation-reg-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.MulOperationRegReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.NegateRule.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-negate-rule/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.NegateRule.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-lit-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.PlusOperationLitReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-lit/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegLit.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-plus-operation-reg-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.PlusOperationRegReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.PointerGet.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-pointer-get/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.PointerGet.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-lit/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.SubOperationRegLit.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-sub-operation-reg-reg/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.SubOperationRegReg.resultSymbol"]},{"name":"open override val resultSymbol: Char","description":"com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-value-from-pointer/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char","com.martingoe.cubelang.backend.instructionselection.ValueFromPointer.resultSymbol"]},{"name":"open override val resultSymbol: Char = 'r'","description":"com.martingoe.cubelang.backend.instructionselection.StringLiteral.resultSymbol","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-string-literal/result-symbol.html","searchKeys":["resultSymbol","open override val resultSymbol: Char = 'r'","com.martingoe.cubelang.backend.instructionselection.StringLiteral.resultSymbol"]},{"name":"open override var message: String","description":"com.martingoe.cubelang.frontend.parser.ParseException.message","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parse-exception/message.html","searchKeys":["message","open override var message: String","com.martingoe.cubelang.frontend.parser.ParseException.message"]},{"name":"val ARG_REGISTERS: Array<String>","description":"com.martingoe.cubelang.common.RegisterConfig.Companion.ARG_REGISTERS","location":"-cubelang/com.martingoe.cubelang.common/-register-config/-companion/-a-r-g_-r-e-g-i-s-t-e-r-s.html","searchKeys":["ARG_REGISTERS","val ARG_REGISTERS: Array<String>","com.martingoe.cubelang.common.RegisterConfig.Companion.ARG_REGISTERS"]},{"name":"val NORMALTYPE_INTS: List<NormalTypes>","description":"com.martingoe.cubelang.common.NORMALTYPE_INTS","location":"-cubelang/com.martingoe.cubelang.common/-n-o-r-m-a-l-t-y-p-e_-i-n-t-s.html","searchKeys":["NORMALTYPE_INTS","val NORMALTYPE_INTS: List<NormalTypes>","com.martingoe.cubelang.common.NORMALTYPE_INTS"]},{"name":"val NORMAL_REGISTER: Array<String>","description":"com.martingoe.cubelang.common.RegisterConfig.Companion.NORMAL_REGISTER","location":"-cubelang/com.martingoe.cubelang.common/-register-config/-companion/-n-o-r-m-a-l_-r-e-g-i-s-t-e-r.html","searchKeys":["NORMAL_REGISTER","val NORMAL_REGISTER: Array<String>","com.martingoe.cubelang.common.RegisterConfig.Companion.NORMAL_REGISTER"]},{"name":"val args: List<Statement.ArgumentDefinition>","description":"com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.args","location":"-cubelang/com.martingoe.cubelang.common/-statement/-extern-function-definition/args.html","searchKeys":["args","val args: List<Statement.ArgumentDefinition>","com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.args"]},{"name":"val args: List<Statement.ArgumentDefinition>","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition.args","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/args.html","searchKeys":["args","val args: List<Statement.ArgumentDefinition>","com.martingoe.cubelang.common.Statement.FunctionDefinition.args"]},{"name":"val body: List<Statement.VarInitialization>","description":"com.martingoe.cubelang.common.Statement.StructDefinition.body","location":"-cubelang/com.martingoe.cubelang.common/-statement/-struct-definition/body.html","searchKeys":["body","val body: List<Statement.VarInitialization>","com.martingoe.cubelang.common.Statement.StructDefinition.body"]},{"name":"val bracket: Token","description":"com.martingoe.cubelang.common.Expression.ArrayGet.bracket","location":"-cubelang/com.martingoe.cubelang.common/-expression/-array-get/bracket.html","searchKeys":["bracket","val bracket: Token","com.martingoe.cubelang.common.Expression.ArrayGet.bracket"]},{"name":"val bracket: Token","description":"com.martingoe.cubelang.common.Expression.Call.bracket","location":"-cubelang/com.martingoe.cubelang.common/-expression/-call/bracket.html","searchKeys":["bracket","val bracket: Token","com.martingoe.cubelang.common.Expression.Call.bracket"]},{"name":"val callee: Expression.VarCall","description":"com.martingoe.cubelang.common.Expression.Call.callee","location":"-cubelang/com.martingoe.cubelang.common/-expression/-call/callee.html","searchKeys":["callee","val callee: Expression.VarCall","com.martingoe.cubelang.common.Expression.Call.callee"]},{"name":"val comparator: Token","description":"com.martingoe.cubelang.common.Expression.Comparison.comparator","location":"-cubelang/com.martingoe.cubelang.common/-expression/-comparison/comparator.html","searchKeys":["comparator","val comparator: Token","com.martingoe.cubelang.common.Expression.Comparison.comparator"]},{"name":"val end: Int","description":"com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.end","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-current-active-register-live-interval/end.html","searchKeys":["end","val end: Int","com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.end"]},{"name":"val equals: Token","description":"com.martingoe.cubelang.common.Expression.Assignment.equals","location":"-cubelang/com.martingoe.cubelang.common/-expression/-assignment/equals.html","searchKeys":["equals","val equals: Token","com.martingoe.cubelang.common.Expression.Assignment.equals"]},{"name":"val expression: Expression","description":"com.martingoe.cubelang.common.Expression.ArrayGet.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-array-get/expression.html","searchKeys":["expression","val expression: Expression","com.martingoe.cubelang.common.Expression.ArrayGet.expression"]},{"name":"val expression: Expression","description":"com.martingoe.cubelang.common.Expression.InstanceGet.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-instance-get/expression.html","searchKeys":["expression","val expression: Expression","com.martingoe.cubelang.common.Expression.InstanceGet.expression"]},{"name":"val identifier: Token","description":"com.martingoe.cubelang.common.Expression.InstanceGet.identifier","location":"-cubelang/com.martingoe.cubelang.common/-expression/-instance-get/identifier.html","searchKeys":["identifier","val identifier: Token","com.martingoe.cubelang.common.Expression.InstanceGet.identifier"]},{"name":"val identifier: Token","description":"com.martingoe.cubelang.common.Expression.Unary.identifier","location":"-cubelang/com.martingoe.cubelang.common/-expression/-unary/identifier.html","searchKeys":["identifier","val identifier: Token","com.martingoe.cubelang.common.Expression.Unary.identifier"]},{"name":"val identifier: Token","description":"com.martingoe.cubelang.common.Statement.ImportStmnt.identifier","location":"-cubelang/com.martingoe.cubelang.common/-statement/-import-stmnt/identifier.html","searchKeys":["identifier","val identifier: Token","com.martingoe.cubelang.common.Statement.ImportStmnt.identifier"]},{"name":"val inBrackets: Expression","description":"com.martingoe.cubelang.common.Expression.ArrayGet.inBrackets","location":"-cubelang/com.martingoe.cubelang.common/-expression/-array-get/in-brackets.html","searchKeys":["inBrackets","val inBrackets: Expression","com.martingoe.cubelang.common.Expression.ArrayGet.inBrackets"]},{"name":"val index: Int","description":"com.martingoe.cubelang.common.ir.TemporaryRegister.index","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/--index--.html","searchKeys":["index","val index: Int","com.martingoe.cubelang.common.ir.TemporaryRegister.index"]},{"name":"val length: Int","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.length","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/length.html","searchKeys":["length","val length: Int","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.length"]},{"name":"val literal: String","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.literal","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/literal.html","searchKeys":["literal","val literal: String","com.martingoe.cubelang.common.ir.FramePointerOffset.literal"]},{"name":"val logical: Token","description":"com.martingoe.cubelang.common.Expression.Logical.logical","location":"-cubelang/com.martingoe.cubelang.common/-expression/-logical/logical.html","searchKeys":["logical","val logical: Token","com.martingoe.cubelang.common.Expression.Logical.logical"]},{"name":"val name: String","description":"com.martingoe.cubelang.common.VarNode.name","location":"-cubelang/com.martingoe.cubelang.common/-var-node/name.html","searchKeys":["name","val name: String","com.martingoe.cubelang.common.VarNode.name"]},{"name":"val name: String","description":"com.martingoe.cubelang.common.definitions.Struct.name","location":"-cubelang/com.martingoe.cubelang.common.definitions/-struct/name.html","searchKeys":["name","val name: String","com.martingoe.cubelang.common.definitions.Struct.name"]},{"name":"val name: String","description":"com.martingoe.cubelang.common.ir.FunctionLabel.name","location":"-cubelang/com.martingoe.cubelang.common.ir/-function-label/name.html","searchKeys":["name","val name: String","com.martingoe.cubelang.common.ir.FunctionLabel.name"]},{"name":"val name: Token","description":"com.martingoe.cubelang.common.Statement.ArgumentDefinition.name","location":"-cubelang/com.martingoe.cubelang.common/-statement/-argument-definition/name.html","searchKeys":["name","val name: Token","com.martingoe.cubelang.common.Statement.ArgumentDefinition.name"]},{"name":"val name: Token","description":"com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.name","location":"-cubelang/com.martingoe.cubelang.common/-statement/-extern-function-definition/name.html","searchKeys":["name","val name: Token","com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.name"]},{"name":"val name: Token","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition.name","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/name.html","searchKeys":["name","val name: Token","com.martingoe.cubelang.common.Statement.FunctionDefinition.name"]},{"name":"val name: Token","description":"com.martingoe.cubelang.common.Statement.StructDefinition.name","location":"-cubelang/com.martingoe.cubelang.common/-statement/-struct-definition/name.html","searchKeys":["name","val name: Token","com.martingoe.cubelang.common.Statement.StructDefinition.name"]},{"name":"val name: Token","description":"com.martingoe.cubelang.common.Statement.VarInitialization.name","location":"-cubelang/com.martingoe.cubelang.common/-statement/-var-initialization/name.html","searchKeys":["name","val name: Token","com.martingoe.cubelang.common.Statement.VarInitialization.name"]},{"name":"val offset: Int","description":"com.martingoe.cubelang.common.VarNode.offset","location":"-cubelang/com.martingoe.cubelang.common/-var-node/offset.html","searchKeys":["offset","val offset: Int","com.martingoe.cubelang.common.VarNode.offset"]},{"name":"val operator: Token","description":"com.martingoe.cubelang.common.Expression.Operation.operator","location":"-cubelang/com.martingoe.cubelang.common/-expression/-operation/operator.html","searchKeys":["operator","val operator: Token","com.martingoe.cubelang.common.Expression.Operation.operator"]},{"name":"val regIndex: Int","description":"com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.regIndex","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-current-active-register-live-interval/reg-index.html","searchKeys":["regIndex","val regIndex: Int","com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.regIndex"]},{"name":"val resultType: Type","description":"com.martingoe.cubelang.common.ir.IRValue.resultType","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/result-type.html","searchKeys":["resultType","val resultType: Type","com.martingoe.cubelang.common.ir.IRValue.resultType"]},{"name":"val star: Token","description":"com.martingoe.cubelang.common.Expression.ValueFromPointer.star","location":"-cubelang/com.martingoe.cubelang.common/-expression/-value-from-pointer/star.html","searchKeys":["star","val star: Token","com.martingoe.cubelang.common.Expression.ValueFromPointer.star"]},{"name":"val start: Int","description":"com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.start","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-current-active-register-live-interval/start.html","searchKeys":["start","val start: Int","com.martingoe.cubelang.backend.instructionselection.CurrentActiveRegisterLiveInterval.start"]},{"name":"val start: Int","description":"com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.start","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-virtual-register-live-interval/start.html","searchKeys":["start","val start: Int","com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.start"]},{"name":"val symbols: MutableList<Node>","description":"com.martingoe.cubelang.common.Scope.symbols","location":"-cubelang/com.martingoe.cubelang.common/-scope/symbols.html","searchKeys":["symbols","val symbols: MutableList<Node>","com.martingoe.cubelang.common.Scope.symbols"]},{"name":"val temporaryRegister: TemporaryRegister","description":"com.martingoe.cubelang.common.ir.RegOffset.temporaryRegister","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/temporary-register.html","searchKeys":["temporaryRegister","val temporaryRegister: TemporaryRegister","com.martingoe.cubelang.common.ir.RegOffset.temporaryRegister"]},{"name":"val temporaryRegister: TemporaryRegister? = null","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.temporaryRegister","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/temporary-register.html","searchKeys":["temporaryRegister","val temporaryRegister: TemporaryRegister? = null","com.martingoe.cubelang.common.ir.FramePointerOffset.temporaryRegister"]},{"name":"val token: Token? = null","description":"com.martingoe.cubelang.common.Expression.Literal.token","location":"-cubelang/com.martingoe.cubelang.common/-expression/-literal/token.html","searchKeys":["token","val token: Token? = null","com.martingoe.cubelang.common.Expression.Literal.token"]},{"name":"val type: IRType","description":"com.martingoe.cubelang.common.ir.IRValue.type","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/type.html","searchKeys":["type","val type: IRType","com.martingoe.cubelang.common.ir.IRValue.type"]},{"name":"val type: Type","description":"com.martingoe.cubelang.common.Statement.ArgumentDefinition.type","location":"-cubelang/com.martingoe.cubelang.common/-statement/-argument-definition/type.html","searchKeys":["type","val type: Type","com.martingoe.cubelang.common.Statement.ArgumentDefinition.type"]},{"name":"val type: Type","description":"com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.type","location":"-cubelang/com.martingoe.cubelang.common/-statement/-extern-function-definition/type.html","searchKeys":["type","val type: Type","com.martingoe.cubelang.common.Statement.ExternFunctionDefinition.type"]},{"name":"val type: Type","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition.type","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/type.html","searchKeys":["type","val type: Type","com.martingoe.cubelang.common.Statement.FunctionDefinition.type"]},{"name":"val type: Type","description":"com.martingoe.cubelang.common.VarNode.type","location":"-cubelang/com.martingoe.cubelang.common/-var-node/type.html","searchKeys":["type","val type: Type","com.martingoe.cubelang.common.VarNode.type"]},{"name":"val value: Char","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.value","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/value.html","searchKeys":["value","val value: Char","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.value"]},{"name":"val value: String","description":"com.martingoe.cubelang.common.ir.IRLiteral.value","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-literal/value.html","searchKeys":["value","val value: String","com.martingoe.cubelang.common.ir.IRLiteral.value"]},{"name":"val value: Token","description":"com.martingoe.cubelang.common.Expression.StringLiteral.value","location":"-cubelang/com.martingoe.cubelang.common/-expression/-string-literal/value.html","searchKeys":["value","val value: Token","com.martingoe.cubelang.common.Expression.StringLiteral.value"]},{"name":"val varName: Token","description":"com.martingoe.cubelang.common.Expression.VarCall.varName","location":"-cubelang/com.martingoe.cubelang.common/-expression/-var-call/var-name.html","searchKeys":["varName","val varName: Token","com.martingoe.cubelang.common.Expression.VarCall.varName"]},{"name":"val variables: List<Pair<String, Type>>","description":"com.martingoe.cubelang.common.definitions.Struct.variables","location":"-cubelang/com.martingoe.cubelang.common.definitions/-struct/variables.html","searchKeys":["variables","val variables: List<Pair<String, Type>>","com.martingoe.cubelang.common.definitions.Struct.variables"]},{"name":"val virtualRegIndex: Int","description":"com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.virtualRegIndex","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-virtual-register-live-interval/virtual-reg-index.html","searchKeys":["virtualRegIndex","val virtualRegIndex: Int","com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.virtualRegIndex"]},{"name":"var allocatedIndex: Int","description":"com.martingoe.cubelang.common.ir.TemporaryRegister.allocatedIndex","location":"-cubelang/com.martingoe.cubelang.common.ir/-temporary-register/allocated-index.html","searchKeys":["allocatedIndex","var allocatedIndex: Int","com.martingoe.cubelang.common.ir.TemporaryRegister.allocatedIndex"]},{"name":"var arg0: ValueType?","description":"com.martingoe.cubelang.common.ir.IRValue.arg0","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/arg0.html","searchKeys":["arg0","var arg0: ValueType?","com.martingoe.cubelang.common.ir.IRValue.arg0"]},{"name":"var arg1: ValueType?","description":"com.martingoe.cubelang.common.ir.IRValue.arg1","location":"-cubelang/com.martingoe.cubelang.common.ir/-i-r-value/arg1.html","searchKeys":["arg1","var arg1: ValueType?","com.martingoe.cubelang.common.ir.IRValue.arg1"]},{"name":"var args: Map<String, Type>","description":"com.martingoe.cubelang.common.definitions.Function.args","location":"-cubelang/com.martingoe.cubelang.common.definitions/-function/args.html","searchKeys":["args","var args: Map<String, Type>","com.martingoe.cubelang.common.definitions.Function.args"]},{"name":"var arguments: List<Expression>","description":"com.martingoe.cubelang.common.Expression.Call.arguments","location":"-cubelang/com.martingoe.cubelang.common/-expression/-call/arguments.html","searchKeys":["arguments","var arguments: List<Expression>","com.martingoe.cubelang.common.Expression.Call.arguments"]},{"name":"var asmEmitter: ASMEmitter","description":"com.martingoe.cubelang.backend.instructionselection.ASTToIRService.asmEmitter","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-a-s-t-to-i-r-service/asm-emitter.html","searchKeys":["asmEmitter","var asmEmitter: ASMEmitter","com.martingoe.cubelang.backend.instructionselection.ASTToIRService.asmEmitter"]},{"name":"var body: Statement","description":"com.martingoe.cubelang.common.Statement.ForStmnt.body","location":"-cubelang/com.martingoe.cubelang.common/-statement/-for-stmnt/body.html","searchKeys":["body","var body: Statement","com.martingoe.cubelang.common.Statement.ForStmnt.body"]},{"name":"var body: Statement","description":"com.martingoe.cubelang.common.Statement.FunctionDefinition.body","location":"-cubelang/com.martingoe.cubelang.common/-statement/-function-definition/body.html","searchKeys":["body","var body: Statement","com.martingoe.cubelang.common.Statement.FunctionDefinition.body"]},{"name":"var body: Statement","description":"com.martingoe.cubelang.common.Statement.WhileStmnt.body","location":"-cubelang/com.martingoe.cubelang.common/-statement/-while-stmnt/body.html","searchKeys":["body","var body: Statement","com.martingoe.cubelang.common.Statement.WhileStmnt.body"]},{"name":"var condition: Expression","description":"com.martingoe.cubelang.common.Statement.IfStmnt.condition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-if-stmnt/condition.html","searchKeys":["condition","var condition: Expression","com.martingoe.cubelang.common.Statement.IfStmnt.condition"]},{"name":"var condition: Expression","description":"com.martingoe.cubelang.common.Statement.WhileStmnt.condition","location":"-cubelang/com.martingoe.cubelang.common/-statement/-while-stmnt/condition.html","searchKeys":["condition","var condition: Expression","com.martingoe.cubelang.common.Statement.WhileStmnt.condition"]},{"name":"var cost: MutableMap<Char, Int>","description":"com.martingoe.cubelang.common.Expression.cost","location":"-cubelang/com.martingoe.cubelang.common/-expression/cost.html","searchKeys":["cost","var cost: MutableMap<Char, Int>","com.martingoe.cubelang.common.Expression.cost"]},{"name":"var count: Int","description":"com.martingoe.cubelang.common.ArrayType.count","location":"-cubelang/com.martingoe.cubelang.common/-array-type/count.html","searchKeys":["count","var count: Int","com.martingoe.cubelang.common.ArrayType.count"]},{"name":"var elseBody: Statement?","description":"com.martingoe.cubelang.common.Statement.IfStmnt.elseBody","location":"-cubelang/com.martingoe.cubelang.common/-statement/-if-stmnt/else-body.html","searchKeys":["elseBody","var elseBody: Statement?","com.martingoe.cubelang.common.Statement.IfStmnt.elseBody"]},{"name":"var end: Int","description":"com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.end","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-virtual-register-live-interval/end.html","searchKeys":["end","var end: Int","com.martingoe.cubelang.backend.instructionselection.VirtualRegisterLiveInterval.end"]},{"name":"var expression: Expression","description":"com.martingoe.cubelang.common.Expression.ExtendTo64Bit.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-extend-to64-bit/expression.html","searchKeys":["expression","var expression: Expression","com.martingoe.cubelang.common.Expression.ExtendTo64Bit.expression"]},{"name":"var expression: Expression","description":"com.martingoe.cubelang.common.Expression.Grouping.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-grouping/expression.html","searchKeys":["expression","var expression: Expression","com.martingoe.cubelang.common.Expression.Grouping.expression"]},{"name":"var expression: Expression","description":"com.martingoe.cubelang.common.Expression.PointerGet.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-pointer-get/expression.html","searchKeys":["expression","var expression: Expression","com.martingoe.cubelang.common.Expression.PointerGet.expression"]},{"name":"var expression: Expression","description":"com.martingoe.cubelang.common.Expression.Unary.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-unary/expression.html","searchKeys":["expression","var expression: Expression","com.martingoe.cubelang.common.Expression.Unary.expression"]},{"name":"var expression: Expression","description":"com.martingoe.cubelang.common.Expression.ValueFromPointer.expression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-value-from-pointer/expression.html","searchKeys":["expression","var expression: Expression","com.martingoe.cubelang.common.Expression.ValueFromPointer.expression"]},{"name":"var expression: Expression","description":"com.martingoe.cubelang.common.Statement.ExpressionStatement.expression","location":"-cubelang/com.martingoe.cubelang.common/-statement/-expression-statement/expression.html","searchKeys":["expression","var expression: Expression","com.martingoe.cubelang.common.Statement.ExpressionStatement.expression"]},{"name":"var failureState: Int = 0","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.failureState","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/failure-state.html","searchKeys":["failureState","var failureState: Int = 0","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.failureState"]},{"name":"var fileSymbolTables: MutableMap<String, FileSymbolTable>","description":"com.martingoe.cubelang.common.SymbolTableSingleton.fileSymbolTables","location":"-cubelang/com.martingoe.cubelang.common/-symbol-table-singleton/file-symbol-tables.html","searchKeys":["fileSymbolTables","var fileSymbolTables: MutableMap<String, FileSymbolTable>","com.martingoe.cubelang.common.SymbolTableSingleton.fileSymbolTables"]},{"name":"var finishedString: String","description":"com.martingoe.cubelang.common.ASMEmitter.finishedString","location":"-cubelang/com.martingoe.cubelang.common/-a-s-m-emitter/finished-string.html","searchKeys":["finishedString","var finishedString: String","com.martingoe.cubelang.common.ASMEmitter.finishedString"]},{"name":"var functions: MutableList<Function>","description":"com.martingoe.cubelang.common.FileSymbolTable.functions","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/functions.html","searchKeys":["functions","var functions: MutableList<Function>","com.martingoe.cubelang.common.FileSymbolTable.functions"]},{"name":"var ifBody: Statement","description":"com.martingoe.cubelang.common.Statement.IfStmnt.ifBody","location":"-cubelang/com.martingoe.cubelang.common/-statement/-if-stmnt/if-body.html","searchKeys":["ifBody","var ifBody: Statement","com.martingoe.cubelang.common.Statement.IfStmnt.ifBody"]},{"name":"var inBrackets: List<Statement>","description":"com.martingoe.cubelang.common.Statement.ForStmnt.inBrackets","location":"-cubelang/com.martingoe.cubelang.common/-statement/-for-stmnt/in-brackets.html","searchKeys":["inBrackets","var inBrackets: List<Statement>","com.martingoe.cubelang.common.Statement.ForStmnt.inBrackets"]},{"name":"var index: Int","description":"com.martingoe.cubelang.common.Expression.Register.index","location":"-cubelang/com.martingoe.cubelang.common/-expression/-register/--index--.html","searchKeys":["index","var index: Int","com.martingoe.cubelang.common.Expression.Register.index"]},{"name":"var index: Int","description":"com.martingoe.cubelang.common.tokens.Token.index","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/--index--.html","searchKeys":["index","var index: Int","com.martingoe.cubelang.common.tokens.Token.index"]},{"name":"var isAccepting: Array<Pair<Boolean, Int>>","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.isAccepting","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/is-accepting.html","searchKeys":["isAccepting","var isAccepting: Array<Pair<Boolean, Int>>","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.isAccepting"]},{"name":"var leftExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Comparison.leftExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-comparison/left-expression.html","searchKeys":["leftExpression","var leftExpression: Expression","com.martingoe.cubelang.common.Expression.Comparison.leftExpression"]},{"name":"var leftExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Logical.leftExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-logical/left-expression.html","searchKeys":["leftExpression","var leftExpression: Expression","com.martingoe.cubelang.common.Expression.Logical.leftExpression"]},{"name":"var leftExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Operation.leftExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-operation/left-expression.html","searchKeys":["leftExpression","var leftExpression: Expression","com.martingoe.cubelang.common.Expression.Operation.leftExpression"]},{"name":"var leftSide: Expression","description":"com.martingoe.cubelang.common.Expression.Assignment.leftSide","location":"-cubelang/com.martingoe.cubelang.common/-expression/-assignment/left-side.html","searchKeys":["leftSide","var leftSide: Expression","com.martingoe.cubelang.common.Expression.Assignment.leftSide"]},{"name":"var line: Int","description":"com.martingoe.cubelang.common.tokens.Token.line","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/line.html","searchKeys":["line","var line: Int","com.martingoe.cubelang.common.tokens.Token.line"]},{"name":"var matchedResults: MutableMap<Char, Int>","description":"com.martingoe.cubelang.common.Expression.matchedResults","location":"-cubelang/com.martingoe.cubelang.common/-expression/matched-results.html","searchKeys":["matchedResults","var matchedResults: MutableMap<Char, Int>","com.martingoe.cubelang.common.Expression.matchedResults"]},{"name":"var name: String","description":"com.martingoe.cubelang.common.definitions.Function.name","location":"-cubelang/com.martingoe.cubelang.common.definitions/-function/name.html","searchKeys":["name","var name: String","com.martingoe.cubelang.common.definitions.Function.name"]},{"name":"var next: MutableList<Int>","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.next","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/-trie-entry/next.html","searchKeys":["next","var next: MutableList<Int>","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.TrieEntry.next"]},{"name":"var offset: String","description":"com.martingoe.cubelang.common.ir.RegOffset.offset","location":"-cubelang/com.martingoe.cubelang.common.ir/-reg-offset/offset.html","searchKeys":["offset","var offset: String","com.martingoe.cubelang.common.ir.RegOffset.offset"]},{"name":"var offset: String? = null","description":"com.martingoe.cubelang.common.ir.FramePointerOffset.offset","location":"-cubelang/com.martingoe.cubelang.common.ir/-frame-pointer-offset/offset.html","searchKeys":["offset","var offset: String? = null","com.martingoe.cubelang.common.ir.FramePointerOffset.offset"]},{"name":"var resultIRValues: ArrayList<IRValue>","description":"com.martingoe.cubelang.common.ASMEmitter.resultIRValues","location":"-cubelang/com.martingoe.cubelang.common/-a-s-m-emitter/result-i-r-values.html","searchKeys":["resultIRValues","var resultIRValues: ArrayList<IRValue>","com.martingoe.cubelang.common.ASMEmitter.resultIRValues"]},{"name":"var resultType: Type","description":"com.martingoe.cubelang.common.Expression.resultType","location":"-cubelang/com.martingoe.cubelang.common/-expression/result-type.html","searchKeys":["resultType","var resultType: Type","com.martingoe.cubelang.common.Expression.resultType"]},{"name":"var returnType: Type?","description":"com.martingoe.cubelang.common.definitions.Function.returnType","location":"-cubelang/com.martingoe.cubelang.common.definitions/-function/return-type.html","searchKeys":["returnType","var returnType: Type?","com.martingoe.cubelang.common.definitions.Function.returnType"]},{"name":"var returnValue: Expression?","description":"com.martingoe.cubelang.common.Statement.ReturnStmnt.returnValue","location":"-cubelang/com.martingoe.cubelang.common/-statement/-return-stmnt/return-value.html","searchKeys":["returnValue","var returnValue: Expression?","com.martingoe.cubelang.common.Statement.ReturnStmnt.returnValue"]},{"name":"var rightExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Comparison.rightExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-comparison/right-expression.html","searchKeys":["rightExpression","var rightExpression: Expression","com.martingoe.cubelang.common.Expression.Comparison.rightExpression"]},{"name":"var rightExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Logical.rightExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-logical/right-expression.html","searchKeys":["rightExpression","var rightExpression: Expression","com.martingoe.cubelang.common.Expression.Logical.rightExpression"]},{"name":"var rightExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Operation.rightExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-operation/right-expression.html","searchKeys":["rightExpression","var rightExpression: Expression","com.martingoe.cubelang.common.Expression.Operation.rightExpression"]},{"name":"var ruleMatchingBytes: IntArray","description":"com.martingoe.cubelang.common.Expression.ruleMatchingBytes","location":"-cubelang/com.martingoe.cubelang.common/-expression/rule-matching-bytes.html","searchKeys":["ruleMatchingBytes","var ruleMatchingBytes: IntArray","com.martingoe.cubelang.common.Expression.ruleMatchingBytes"]},{"name":"var state: Int = 0","description":"com.martingoe.cubelang.common.Expression.state","location":"-cubelang/com.martingoe.cubelang.common/-expression/state.html","searchKeys":["state","var state: Int = 0","com.martingoe.cubelang.common.Expression.state"]},{"name":"var statements: List<Statement>","description":"com.martingoe.cubelang.common.Statement.BlockStatement.statements","location":"-cubelang/com.martingoe.cubelang.common/-statement/-block-statement/statements.html","searchKeys":["statements","var statements: List<Statement>","com.martingoe.cubelang.common.Statement.BlockStatement.statements"]},{"name":"var stringLiterals: MutableMap<String, Int>","description":"com.martingoe.cubelang.common.FileSymbolTable.stringLiterals","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/string-literals.html","searchKeys":["stringLiterals","var stringLiterals: MutableMap<String, Int>","com.martingoe.cubelang.common.FileSymbolTable.stringLiterals"]},{"name":"var structs: HashMap<String, Struct>","description":"com.martingoe.cubelang.common.FileSymbolTable.structs","location":"-cubelang/com.martingoe.cubelang.common/-file-symbol-table/structs.html","searchKeys":["structs","var structs: HashMap<String, Struct>","com.martingoe.cubelang.common.FileSymbolTable.structs"]},{"name":"var subType: Type","description":"com.martingoe.cubelang.common.ArrayType.subType","location":"-cubelang/com.martingoe.cubelang.common/-array-type/sub-type.html","searchKeys":["subType","var subType: Type","com.martingoe.cubelang.common.ArrayType.subType"]},{"name":"var substring: String","description":"com.martingoe.cubelang.common.tokens.Token.substring","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/substring.html","searchKeys":["substring","var substring: String","com.martingoe.cubelang.common.tokens.Token.substring"]},{"name":"var subtype: Type","description":"com.martingoe.cubelang.common.PointerType.subtype","location":"-cubelang/com.martingoe.cubelang.common/-pointer-type/subtype.html","searchKeys":["subtype","var subtype: Type","com.martingoe.cubelang.common.PointerType.subtype"]},{"name":"var token: Token","description":"com.martingoe.cubelang.frontend.parser.ParseException.token","location":"-cubelang/com.martingoe.cubelang.frontend.parser/-parse-exception/token.html","searchKeys":["token","var token: Token","com.martingoe.cubelang.frontend.parser.ParseException.token"]},{"name":"var tokenSequence: MutableList<Token>","description":"com.martingoe.cubelang.frontend.lexing.Lexer.tokenSequence","location":"-cubelang/com.martingoe.cubelang.frontend.lexing/-lexer/token-sequence.html","searchKeys":["tokenSequence","var tokenSequence: MutableList<Token>","com.martingoe.cubelang.frontend.lexing.Lexer.tokenSequence"]},{"name":"var tokenType: TokenType","description":"com.martingoe.cubelang.common.tokens.Token.tokenType","location":"-cubelang/com.martingoe.cubelang.common.tokens/-token/token-type.html","searchKeys":["tokenType","var tokenType: TokenType","com.martingoe.cubelang.common.tokens.Token.tokenType"]},{"name":"var trieEntries: MutableList<ExpressionMatchingTrie.TrieEntry>","description":"com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.trieEntries","location":"-cubelang/com.martingoe.cubelang.backend.instructionselection/-expression-matching-trie/trie-entries.html","searchKeys":["trieEntries","var trieEntries: MutableList<ExpressionMatchingTrie.TrieEntry>","com.martingoe.cubelang.backend.instructionselection.ExpressionMatchingTrie.trieEntries"]},{"name":"var type: NormalTypes","description":"com.martingoe.cubelang.common.NormalType.type","location":"-cubelang/com.martingoe.cubelang.common/-normal-type/type.html","searchKeys":["type","var type: NormalTypes","com.martingoe.cubelang.common.NormalType.type"]},{"name":"var type: Type","description":"com.martingoe.cubelang.common.Expression.Register.type","location":"-cubelang/com.martingoe.cubelang.common/-expression/-register/type.html","searchKeys":["type","var type: Type","com.martingoe.cubelang.common.Expression.Register.type"]},{"name":"var type: Type","description":"com.martingoe.cubelang.common.Statement.VarInitialization.type","location":"-cubelang/com.martingoe.cubelang.common/-statement/-var-initialization/type.html","searchKeys":["type","var type: Type","com.martingoe.cubelang.common.Statement.VarInitialization.type"]},{"name":"var typeName: String","description":"com.martingoe.cubelang.common.StructType.typeName","location":"-cubelang/com.martingoe.cubelang.common/-struct-type/type-name.html","searchKeys":["typeName","var typeName: String","com.martingoe.cubelang.common.StructType.typeName"]},{"name":"var value: Any?","description":"com.martingoe.cubelang.common.Expression.Literal.value","location":"-cubelang/com.martingoe.cubelang.common/-expression/-literal/value.html","searchKeys":["value","var value: Any?","com.martingoe.cubelang.common.Expression.Literal.value"]},{"name":"var valueExpression: Expression","description":"com.martingoe.cubelang.common.Expression.Assignment.valueExpression","location":"-cubelang/com.martingoe.cubelang.common/-expression/-assignment/value-expression.html","searchKeys":["valueExpression","var valueExpression: Expression","com.martingoe.cubelang.common.Expression.Assignment.valueExpression"]},{"name":"var valueExpression: Expression?","description":"com.martingoe.cubelang.common.Statement.VarInitialization.valueExpression","location":"-cubelang/com.martingoe.cubelang.common/-statement/-var-initialization/value-expression.html","searchKeys":["valueExpression","var valueExpression: Expression?","com.martingoe.cubelang.common.Statement.VarInitialization.valueExpression"]}]
